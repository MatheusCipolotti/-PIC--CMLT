

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Mar 30 11:12:29 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Generated 05/01/2024 GMT
    36                           ; 
    37                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     0091                     	;# 
   114     0092                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     018C                     	;# 
   128     018D                     	;# 
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     001A                     	;# 
   158     001B                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     0087                     	;# 
   168     0088                     	;# 
   169     0089                     	;# 
   170     008C                     	;# 
   171     008D                     	;# 
   172     008E                     	;# 
   173     0091                     	;# 
   174     0092                     	;# 
   175     0093                     	;# 
   176     0094                     	;# 
   177     0098                     	;# 
   178     0099                     	;# 
   179     009C                     	;# 
   180     009D                     	;# 
   181     009E                     	;# 
   182     009F                     	;# 
   183     010C                     	;# 
   184     010D                     	;# 
   185     010E                     	;# 
   186     010F                     	;# 
   187     018C                     	;# 
   188     018D                     	;# 
   189                           
   190                           	psect	idataCOMMON
   191     07C2                     __pidataCOMMON:
   192                           
   193                           ;initializer for _controle
   194     07C2  3401               	retlw	1
   195     0015                     _CCPR1L	set	21
   196     0009                     _PORTE	set	9
   197     0008                     _PORTD	set	8
   198     0007                     _PORTC	set	7
   199     0006                     _PORTB	set	6
   200     0005                     _PORTA	set	5
   201     0017                     _CCP1CON	set	23
   202     0012                     _T2CON	set	18
   203     001F                     _ADCON0	set	31
   204     0006                     _PORTBbits	set	6
   205     0001                     _TMR0	set	1
   206     000B                     _INTCONbits	set	11
   207     0008                     _PORTDbits	set	8
   208     0089                     _TRISE	set	137
   209     0088                     _TRISD	set	136
   210     0087                     _TRISC	set	135
   211     0086                     _TRISB	set	134
   212     0085                     _TRISA	set	133
   213     0092                     _PR2	set	146
   214     0081                     _OPTION_REG	set	129
   215     009F                     _ADCON1	set	159
   216     009C                     _CMCON	set	156
   217                           
   218                           	psect	strings
   219     0500                     __pstrings:
   220     0500                     stringtab:
   221     0500                     __stringtab:
   222     0500                     stringcode:	
   223                           ;	String table - string pointers are 1 byte each
   224                           
   225     0500                     stringdir:
   226     0500  3005               	movlw	high stringdir
   227     0501  008A               	movwf	10
   228     0502  0804               	movf	4,w
   229     0503  0A84               	incf	4,f
   230     0504  0782               	addwf	2,f
   231     0505                     __stringbase:
   232     0505  3400               	retlw	0
   233     0506                     __end_of__stringtab:
   234     0506                     STR_20:
   235     0506  3443               	retlw	67	;'C'
   236     0507  346F               	retlw	111	;'o'
   237     0508  346E               	retlw	110	;'n'
   238     0509  3474               	retlw	116	;'t'
   239     050A  3472               	retlw	114	;'r'
   240     050B  346F               	retlw	111	;'o'
   241     050C  346C               	retlw	108	;'l'
   242     050D  3465               	retlw	101	;'e'
   243     050E  3420               	retlw	32	;' '
   244     050F  3450               	retlw	80	;'P'
   245     0510  3457               	retlw	87	;'W'
   246     0511  344D               	retlw	77	;'M'
   247     0512  3400               	retlw	0
   248     0513                     STR_12:
   249     0513  3450               	retlw	80	;'P'
   250     0514  3457               	retlw	87	;'W'
   251     0515  344D               	retlw	77	;'M'
   252     0516  3420               	retlw	32	;' '
   253     0517  344D               	retlw	77	;'M'
   254     0518  344F               	retlw	79	;'O'
   255     0519  3444               	retlw	68	;'D'
   256     051A  344F               	retlw	79	;'O'
   257     051B  3420               	retlw	32	;' '
   258     051C  3441               	retlw	65	;'A'
   259     051D  343A               	retlw	58	;':'
   260     051E  3400               	retlw	0
   261     051F                     STR_14:
   262     051F  3450               	retlw	80	;'P'
   263     0520  3457               	retlw	87	;'W'
   264     0521  344D               	retlw	77	;'M'
   265     0522  3420               	retlw	32	;' '
   266     0523  344D               	retlw	77	;'M'
   267     0524  344F               	retlw	79	;'O'
   268     0525  3444               	retlw	68	;'D'
   269     0526  344F               	retlw	79	;'O'
   270     0527  3420               	retlw	32	;' '
   271     0528  3442               	retlw	66	;'B'
   272     0529  343A               	retlw	58	;':'
   273     052A  3400               	retlw	0
   274     052B                     STR_16:
   275     052B  3450               	retlw	80	;'P'
   276     052C  3457               	retlw	87	;'W'
   277     052D  344D               	retlw	77	;'M'
   278     052E  3420               	retlw	32	;' '
   279     052F  344D               	retlw	77	;'M'
   280     0530  344F               	retlw	79	;'O'
   281     0531  3444               	retlw	68	;'D'
   282     0532  344F               	retlw	79	;'O'
   283     0533  3420               	retlw	32	;' '
   284     0534  3443               	retlw	67	;'C'
   285     0535  343A               	retlw	58	;':'
   286     0536  3400               	retlw	0
   287     0537                     STR_18:
   288     0537  3450               	retlw	80	;'P'
   289     0538  3457               	retlw	87	;'W'
   290     0539  344D               	retlw	77	;'M'
   291     053A  3420               	retlw	32	;' '
   292     053B  344D               	retlw	77	;'M'
   293     053C  344F               	retlw	79	;'O'
   294     053D  3444               	retlw	68	;'D'
   295     053E  344F               	retlw	79	;'O'
   296     053F  3420               	retlw	32	;' '
   297     0540  3444               	retlw	68	;'D'
   298     0541  343A               	retlw	58	;':'
   299     0542  3400               	retlw	0
   300     0543                     STR_1:
   301     0543  344D               	retlw	77	;'M'
   302     0544  3441               	retlw	65	;'A'
   303     0545  344E               	retlw	78	;'N'
   304     0546  3455               	retlw	85	;'U'
   305     0547  3441               	retlw	65	;'A'
   306     0548  344C               	retlw	76	;'L'
   307     0549  343A               	retlw	58	;':'
   308     054A  3400               	retlw	0
   309     054B                     STR_15:
   310     054B  3435               	retlw	53	;'5'
   311     054C  3430               	retlw	48	;'0'
   312     054D  3425               	retlw	37	;'%'
   313     054E  3400               	retlw	0
   314     054F                     STR_13:
   315     054F  3432               	retlw	50	;'2'
   316     0550  3435               	retlw	53	;'5'
   317     0551  3425               	retlw	37	;'%'
   318     0552  3400               	retlw	0
   319     0553                     STR_17:
   320     0553  3437               	retlw	55	;'7'
   321     0554  3435               	retlw	53	;'5'
   322     0555  3425               	retlw	37	;'%'
   323     0556  3400               	retlw	0
   324     0557                     STR_19:
   325     0557  3439               	retlw	57	;'9'
   326     0558  3435               	retlw	53	;'5'
   327     0559  3425               	retlw	37	;'%'
   328     055A  3400               	retlw	0
   329     055B                     STR_8:
   330     055B  3430               	retlw	48	;'0'
   331     055C  3400               	retlw	0
   332     055D                     STR_2:
   333     055D  3431               	retlw	49	;'1'
   334     055E  3400               	retlw	0
   335     055F                     STR_5:
   336     055F  3432               	retlw	50	;'2'
   337     0560  3400               	retlw	0
   338     0561                     STR_9:
   339     0561  3433               	retlw	51	;'3'
   340     0562  3400               	retlw	0
   341     0563                     STR_3:
   342     0563  3434               	retlw	52	;'4'
   343     0564  3400               	retlw	0
   344     0565                     STR_6:
   345     0565  3435               	retlw	53	;'5'
   346     0566  3400               	retlw	0
   347     0567                     STR_10:
   348     0567  3436               	retlw	54	;'6'
   349     0568  3400               	retlw	0
   350     0569                     STR_4:
   351     0569  3437               	retlw	55	;'7'
   352     056A  3400               	retlw	0
   353     056B                     STR_7:
   354     056B  3438               	retlw	56	;'8'
   355     056C  3400               	retlw	0
   356     056D                     STR_11:
   357     056D  3439               	retlw	57	;'9'
   358     056E  3400               	retlw	0
   359                           
   360                           	psect	cinit
   361     0015                     start_initialization:	
   362                           ; #config settings
   363                           
   364     0015                     __initialization:
   365                           
   366                           ; Initialize objects allocated to COMMON
   367     0015  120A  118A  27C2  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   368     001A  00FB               	movwf	__pdataCOMMON& (0+127)
   369                           
   370                           ; Clear objects allocated to BANK0
   371     001B  01B7               	clrf	__pbssBANK0& (0+127)
   372                           
   373                           ; Clear objects allocated to COMMON
   374     001C  01F8               	clrf	__pbssCOMMON& (0+127)
   375     001D  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   376     001E  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   377     001F                     end_of_initialization:	
   378                           ;End of C runtime variable initialization code
   379                           
   380     001F                     __end_of__initialization:
   381     001F  0183               	clrf	3
   382     0020  120A  118A  2D6F   	ljmp	_main	;jump to C main() function
   383                           
   384                           	psect	bssCOMMON
   385     0078                     __pbssCOMMON:
   386     0078                     _i:
   387     0078                     	ds	1
   388     0079                     _PWM_MANUAL:
   389     0079                     	ds	1
   390     007A                     _uart_rd:
   391     007A                     	ds	1
   392                           
   393                           	psect	dataCOMMON
   394     007B                     __pdataCOMMON:
   395     007B                     _controle:
   396     007B                     	ds	1
   397                           
   398                           	psect	bssBANK0
   399     0037                     __pbssBANK0:
   400     0037                     _PWM_DUTY:
   401     0037                     	ds	1
   402                           
   403                           	psect	cstackCOMMON
   404     0070                     __pcstackCOMMON:
   405     0070                     ?_LCD_Command:
   406     0070                     ?_LCD_Init:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0070                     ?_LCD_Char:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ?_LCD_String:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     ?_LCD_Clear:	
   416                           ; 1 bytes @ 0x0
   417                           
   418     0070                     ?_Manual_Limpa:	
   419                           ; 1 bytes @ 0x0
   420                           
   421     0070                     ?_Multiplicador:	
   422                           ; 1 bytes @ 0x0
   423                           
   424     0070                     ?_teclado:	
   425                           ; 1 bytes @ 0x0
   426                           
   427     0070                     ?_main:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     0070                     ?___bmul:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     0070                     ?i1_LCD_Command:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     0070                     ??i1_LCD_Command:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0070                     ?i1_LCD_Char:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0070                     ??i1_LCD_Char:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?i1_LCD_String:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0070                     ?i1_LCD_Clear:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0070                     ___bmul@multiplicand:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           ; 1 bytes @ 0x0
   456     0070                     	ds	1
   457     0071                     ??___bmul:
   458     0071                     ___bmul@product:	
   459                           ; 1 bytes @ 0x1
   460                           
   461                           
   462                           ; 1 bytes @ 0x1
   463     0071                     	ds	1
   464     0072                     ___bmul@multiplier:
   465     0072                     i1LCD_Command@cmd:	
   466                           ; 1 bytes @ 0x2
   467                           
   468     0072                     i1LCD_Char@dat:	
   469                           ; 1 bytes @ 0x2
   470                           
   471                           
   472                           ; 1 bytes @ 0x2
   473     0072                     	ds	1
   474     0073                     ??_Multiplicador:
   475     0073                     ??i1_LCD_String:	
   476                           ; 1 bytes @ 0x3
   477                           
   478     0073                     ??i1_LCD_Clear:	
   479                           ; 1 bytes @ 0x3
   480                           
   481     0073                     Multiplicador@valor:	
   482                           ; 1 bytes @ 0x3
   483                           
   484     0073                     i1LCD_String@msg:	
   485                           ; 1 bytes @ 0x3
   486                           
   487                           
   488                           ; 1 bytes @ 0x3
   489     0073                     	ds	1
   490     0074                     ?i1_LCD_String_xy:
   491     0074                     i1LCD_String_xy@pos:	
   492                           ; 1 bytes @ 0x4
   493                           
   494                           
   495                           ; 1 bytes @ 0x4
   496     0074                     	ds	1
   497     0075                     i1LCD_String_xy@msg:
   498                           
   499                           ; 1 bytes @ 0x5
   500     0075                     	ds	1
   501     0076                     ??i1_LCD_String_xy:
   502     0076                     i1LCD_String_xy@row:	
   503                           ; 1 bytes @ 0x6
   504                           
   505                           
   506                           ; 1 bytes @ 0x6
   507     0076                     	ds	1
   508     0077                     i1LCD_String_xy@location:
   509                           
   510                           ; 1 bytes @ 0x7
   511     0077                     	ds	1
   512     0078                     ??_Manual_Limpa:
   513                           
   514                           	psect	cstackBANK0
   515     0020                     __pcstackBANK0:	
   516                           ; 1 bytes @ 0x8
   517                           
   518     0020                     ??_teclado:
   519                           
   520                           ; 1 bytes @ 0x0
   521     0020                     	ds	7
   522     0027                     ??_LCD_Command:
   523     0027                     ??_LCD_Char:	
   524                           ; 1 bytes @ 0x7
   525                           
   526     0027                     ?___wmul:	
   527                           ; 1 bytes @ 0x7
   528                           
   529     0027                     ___wmul@multiplier:	
   530                           ; 2 bytes @ 0x7
   531                           
   532                           
   533                           ; 2 bytes @ 0x7
   534     0027                     	ds	2
   535     0029                     LCD_Command@cmd:
   536     0029                     LCD_Char@dat:	
   537                           ; 1 bytes @ 0x9
   538                           
   539     0029                     ___wmul@multiplicand:	
   540                           ; 1 bytes @ 0x9
   541                           
   542                           
   543                           ; 2 bytes @ 0x9
   544     0029                     	ds	1
   545     002A                     ??_LCD_Init:
   546     002A                     ??_LCD_String:	
   547                           ; 1 bytes @ 0xA
   548                           
   549     002A                     ??_LCD_Clear:	
   550                           ; 1 bytes @ 0xA
   551                           
   552     002A                     LCD_String@msg:	
   553                           ; 1 bytes @ 0xA
   554                           
   555                           
   556                           ; 1 bytes @ 0xA
   557     002A                     	ds	1
   558     002B                     ?_LCD_String_xy:
   559     002B                     ??___wmul:	
   560                           ; 1 bytes @ 0xB
   561                           
   562     002B                     LCD_String_xy@pos:	
   563                           ; 1 bytes @ 0xB
   564                           
   565     002B                     ___wmul@product:	
   566                           ; 1 bytes @ 0xB
   567                           
   568                           
   569                           ; 2 bytes @ 0xB
   570     002B                     	ds	1
   571     002C                     LCD_String_xy@msg:
   572                           
   573                           ; 1 bytes @ 0xC
   574     002C                     	ds	1
   575     002D                     ??_LCD_String_xy:
   576     002D                     ?___awdiv:	
   577                           ; 1 bytes @ 0xD
   578                           
   579     002D                     LCD_String_xy@row:	
   580                           ; 2 bytes @ 0xD
   581                           
   582     002D                     ___awdiv@divisor:	
   583                           ; 1 bytes @ 0xD
   584                           
   585                           
   586                           ; 2 bytes @ 0xD
   587     002D                     	ds	1
   588     002E                     LCD_String_xy@location:
   589                           
   590                           ; 1 bytes @ 0xE
   591     002E                     	ds	1
   592     002F                     ___awdiv@dividend:
   593                           
   594                           ; 2 bytes @ 0xF
   595     002F                     	ds	2
   596     0031                     ??___awdiv:
   597     0031                     ___awdiv@counter:	
   598                           ; 1 bytes @ 0x11
   599                           
   600                           
   601                           ; 1 bytes @ 0x11
   602     0031                     	ds	1
   603     0032                     ___awdiv@sign:
   604                           
   605                           ; 1 bytes @ 0x12
   606     0032                     	ds	1
   607     0033                     ___awdiv@quotient:
   608                           
   609                           ; 2 bytes @ 0x13
   610     0033                     	ds	2
   611     0035                     ??_main:
   612                           
   613                           ; 1 bytes @ 0x15
   614     0035                     	ds	2
   615                           
   616                           	psect	maintext
   617     056F                     __pmaintext:	
   618 ;;
   619 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   620 ;;
   621 ;; *************** function _main *****************
   622 ;; Defined at:
   623 ;;		line 322 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : B00/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0
   639 ;;      Temps:          0       2       0       0       0
   640 ;;      Totals:         0       2       0       0       0
   641 ;;Total ram usage:        2 bytes
   642 ;; Hardware stack levels required when called: 8
   643 ;; This function calls:
   644 ;;		_LCD_Clear
   645 ;;		_LCD_Init
   646 ;;		_LCD_String_xy
   647 ;;		___awdiv
   648 ;;		___wmul
   649 ;; This function is called by:
   650 ;;		Startup code after reset
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654     056F                     _main:	
   655                           ;psect for function _main
   656                           
   657     056F                     l1688:	
   658                           ;incstack = 0
   659                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   660                           
   661                           
   662                           ;main.c: 323:     CMCON = 0x07;
   663     056F  3007               	movlw	7
   664     0570  1683               	bsf	3,5	;RP0=1, select bank1
   665     0571  1303               	bcf	3,6	;RP1=0, select bank1
   666     0572  009C               	movwf	28	;volatile
   667     0573                     l1690:
   668                           
   669                           ;main.c: 324:     ADCON0 = 0x00;
   670     0573  1283               	bcf	3,5	;RP0=0, select bank0
   671     0574  1303               	bcf	3,6	;RP1=0, select bank0
   672     0575  019F               	clrf	31	;volatile
   673     0576                     l1692:
   674                           
   675                           ;main.c: 325:     ADCON1 = 0x06;
   676     0576  3006               	movlw	6
   677     0577  1683               	bsf	3,5	;RP0=1, select bank1
   678     0578  1303               	bcf	3,6	;RP1=0, select bank1
   679     0579  009F               	movwf	31	;volatile
   680     057A                     l1694:
   681                           
   682                           ;main.c: 327:     OPTION_REG = 0x86;
   683     057A  3086               	movlw	134
   684     057B  0081               	movwf	1	;volatile
   685     057C                     l1696:
   686                           
   687                           ;main.c: 328:     INTCONbits.GIE = 0x01;
   688     057C  178B               	bsf	11,7	;volatile
   689     057D                     l1698:
   690                           
   691                           ;main.c: 329:     INTCONbits.PEIE = 0x01;
   692     057D  170B               	bsf	11,6	;volatile
   693     057E                     l1700:
   694                           
   695                           ;main.c: 330:     INTCONbits.T0IE = 0x01;
   696     057E  168B               	bsf	11,5	;volatile
   697     057F                     l1702:
   698                           
   699                           ;main.c: 331:     TMR0 = 0x6C;
   700     057F  306C               	movlw	108
   701     0580  1283               	bcf	3,5	;RP0=0, select bank0
   702     0581  1303               	bcf	3,6	;RP1=0, select bank0
   703     0582  0081               	movwf	1	;volatile
   704     0583                     l1704:
   705                           
   706                           ;main.c: 344:     PR2 = 0xF9;
   707     0583  30F9               	movlw	249
   708     0584  1683               	bsf	3,5	;RP0=1, select bank1
   709     0585  1303               	bcf	3,6	;RP1=0, select bank1
   710     0586  0092               	movwf	18	;volatile
   711     0587                     l1706:
   712                           
   713                           ;main.c: 345:     T2CON = 0x07;
   714     0587  3007               	movlw	7
   715     0588  1283               	bcf	3,5	;RP0=0, select bank0
   716     0589  1303               	bcf	3,6	;RP1=0, select bank0
   717     058A  0092               	movwf	18	;volatile
   718     058B                     l1708:
   719                           
   720                           ;main.c: 346:     CCP1CON = 0x0C;
   721     058B  300C               	movlw	12
   722     058C  0097               	movwf	23	;volatile
   723     058D                     l1710:
   724                           
   725                           ;main.c: 348:     TRISA = 0x00;
   726     058D  1683               	bsf	3,5	;RP0=1, select bank1
   727     058E  1303               	bcf	3,6	;RP1=0, select bank1
   728     058F  0185               	clrf	5	;volatile
   729                           
   730                           ;main.c: 349:     TRISB = 0xF0;
   731     0590  30F0               	movlw	240
   732     0591  0086               	movwf	6	;volatile
   733     0592                     l1712:
   734                           
   735                           ;main.c: 350:     TRISC = 0x00;
   736     0592  0187               	clrf	7	;volatile
   737     0593                     l1714:
   738                           
   739                           ;main.c: 351:     TRISD = 0x00;
   740     0593  0188               	clrf	8	;volatile
   741     0594                     l1716:
   742                           
   743                           ;main.c: 352:     TRISE = 0x00;
   744     0594  0189               	clrf	9	;volatile
   745     0595                     l1718:
   746                           
   747                           ;main.c: 353:     PORTA = 0x00;
   748     0595  1283               	bcf	3,5	;RP0=0, select bank0
   749     0596  1303               	bcf	3,6	;RP1=0, select bank0
   750     0597  0185               	clrf	5	;volatile
   751                           
   752                           ;main.c: 354:     PORTB = 0xFF;
   753     0598  30FF               	movlw	255
   754     0599  0086               	movwf	6	;volatile
   755     059A                     l1720:
   756                           
   757                           ;main.c: 355:     PORTC = 0x00;
   758     059A  0187               	clrf	7	;volatile
   759     059B                     l1722:
   760                           
   761                           ;main.c: 356:     PORTD = 0x00;
   762     059B  0188               	clrf	8	;volatile
   763     059C                     l1724:
   764                           
   765                           ;main.c: 357:     PORTE = 0x00;
   766     059C  0189               	clrf	9	;volatile
   767     059D                     l1726:
   768                           
   769                           ;main.c: 359:     LCD_Init();
   770     059D  120A  118A  26C7  120A  118A  	fcall	_LCD_Init
   771     05A2                     l1728:
   772                           
   773                           ;main.c: 360:     LCD_Clear();
   774     05A2  120A  118A  27A1  120A  118A  	fcall	_LCD_Clear
   775     05A7                     l1730:
   776                           
   777                           ;main.c: 361:     LCD_String_xy(0,1,"Controle PWM");
   778     05A7  1283               	bcf	3,5	;RP0=0, select bank0
   779     05A8  1303               	bcf	3,6	;RP1=0, select bank0
   780     05A9  01AB               	clrf	LCD_String_xy@pos
   781     05AA  0AAB               	incf	LCD_String_xy@pos,f
   782     05AB  3001               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
   783     05AC  00AC               	movwf	LCD_String_xy@msg
   784     05AD  3000               	movlw	0
   785     05AE  120A  118A  2645  120A  118A  	fcall	_LCD_String_xy
   786     05B3                     l1732:
   787                           
   788                           ;main.c: 364:         CCPR1L = ((PWM_DUTY * 255)/100);
   789     05B3  3064               	movlw	100
   790     05B4  1283               	bcf	3,5	;RP0=0, select bank0
   791     05B5  1303               	bcf	3,6	;RP1=0, select bank0
   792     05B6  00AD               	movwf	___awdiv@divisor
   793     05B7  3000               	movlw	0
   794     05B8  00AE               	movwf	___awdiv@divisor+1
   795     05B9  0837               	movf	_PWM_DUTY,w
   796     05BA  00B5               	movwf	??_main
   797     05BB  01B6               	clrf	??_main+1
   798     05BC  0835               	movf	??_main,w
   799     05BD  00A7               	movwf	___wmul@multiplier
   800     05BE  0836               	movf	??_main+1,w
   801     05BF  00A8               	movwf	___wmul@multiplier+1
   802     05C0  30FF               	movlw	255
   803     05C1  00A9               	movwf	___wmul@multiplicand
   804     05C2  3000               	movlw	0
   805     05C3  00AA               	movwf	___wmul@multiplicand+1
   806     05C4  120A  118A  26F5  120A  118A  	fcall	___wmul
   807     05C9  1283               	bcf	3,5	;RP0=0, select bank0
   808     05CA  1303               	bcf	3,6	;RP1=0, select bank0
   809     05CB  0828               	movf	?___wmul+1,w
   810     05CC  00B0               	movwf	___awdiv@dividend+1
   811     05CD  0827               	movf	?___wmul,w
   812     05CE  00AF               	movwf	___awdiv@dividend
   813     05CF  120A  118A  25DC  120A  118A  	fcall	___awdiv
   814     05D4  1283               	bcf	3,5	;RP0=0, select bank0
   815     05D5  1303               	bcf	3,6	;RP1=0, select bank0
   816     05D6  082D               	movf	?___awdiv,w
   817     05D7  0095               	movwf	21	;volatile
   818     05D8  2DB3               	goto	l1732
   819     05D9  120A  118A  2812   	ljmp	start
   820     05DC                     __end_of_main:
   821                           
   822                           	psect	text1
   823     06F5                     __ptext1:	
   824 ;; *************** function ___wmul *****************
   825 ;; Defined at:
   826 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  multiplier      2    7[BANK0 ] unsigned int 
   829 ;;  multiplicand    2    9[BANK0 ] unsigned int 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  product         2   11[BANK0 ] unsigned int 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  2    7[BANK0 ] unsigned int 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       4       0       0       0
   842 ;;      Locals:         0       2       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         0       6       0       0       0
   845 ;;Total ram usage:        6 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 5
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855     06F5                     ___wmul:	
   856                           ;psect for function ___wmul
   857                           
   858     06F5                     l1444:	
   859                           ;incstack = 0
   860                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   861                           
   862     06F5  1283               	bcf	3,5	;RP0=0, select bank0
   863     06F6  1303               	bcf	3,6	;RP1=0, select bank0
   864     06F7  01AB               	clrf	___wmul@product
   865     06F8  01AC               	clrf	___wmul@product+1
   866     06F9                     l1446:
   867     06F9  1C27               	btfss	___wmul@multiplier,0
   868     06FA  2EFC               	goto	u981
   869     06FB  2EFD               	goto	u980
   870     06FC                     u981:
   871     06FC  2F03               	goto	l240
   872     06FD                     u980:
   873     06FD                     l1448:
   874     06FD  0829               	movf	___wmul@multiplicand,w
   875     06FE  07AB               	addwf	___wmul@product,f
   876     06FF  1803               	skipnc
   877     0700  0AAC               	incf	___wmul@product+1,f
   878     0701  082A               	movf	___wmul@multiplicand+1,w
   879     0702  07AC               	addwf	___wmul@product+1,f
   880     0703                     l240:
   881     0703  3001               	movlw	1
   882     0704                     u995:
   883     0704  1003               	clrc
   884     0705  0DA9               	rlf	___wmul@multiplicand,f
   885     0706  0DAA               	rlf	___wmul@multiplicand+1,f
   886     0707  3EFF               	addlw	-1
   887     0708  1D03               	skipz
   888     0709  2F04               	goto	u995
   889     070A                     l1450:
   890     070A  3001               	movlw	1
   891     070B                     u1005:
   892     070B  1003               	clrc
   893     070C  0CA8               	rrf	___wmul@multiplier+1,f
   894     070D  0CA7               	rrf	___wmul@multiplier,f
   895     070E  3EFF               	addlw	-1
   896     070F  1D03               	skipz
   897     0710  2F0B               	goto	u1005
   898     0711                     l1452:
   899     0711  0827               	movf	___wmul@multiplier,w
   900     0712  0428               	iorwf	___wmul@multiplier+1,w
   901     0713  1D03               	btfss	3,2
   902     0714  2F16               	goto	u1011
   903     0715  2F17               	goto	u1010
   904     0716                     u1011:
   905     0716  2EF9               	goto	l1446
   906     0717                     u1010:
   907     0717                     l1454:
   908     0717  082C               	movf	___wmul@product+1,w
   909     0718  00A8               	movwf	?___wmul+1
   910     0719  082B               	movf	___wmul@product,w
   911     071A  00A7               	movwf	?___wmul
   912     071B                     l242:
   913     071B  0008               	return
   914     071C                     __end_of___wmul:
   915                           
   916                           	psect	text2
   917     05DC                     __ptext2:	
   918 ;; *************** function ___awdiv *****************
   919 ;; Defined at:
   920 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  divisor         2   13[BANK0 ] int 
   923 ;;  dividend        2   15[BANK0 ] int 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  quotient        2   19[BANK0 ] int 
   926 ;;  sign            1   18[BANK0 ] unsigned char 
   927 ;;  counter         1   17[BANK0 ] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  2   13[BANK0 ] int 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, btemp+1
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       4       0       0       0
   938 ;;      Locals:         0       4       0       0       0
   939 ;;      Temps:          0       0       0       0       0
   940 ;;      Totals:         0       8       0       0       0
   941 ;;Total ram usage:        8 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 5
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951     05DC                     ___awdiv:	
   952                           ;psect for function ___awdiv
   953                           
   954     05DC                     l1458:	
   955                           ;incstack = 0
   956                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   957                           
   958     05DC  1283               	bcf	3,5	;RP0=0, select bank0
   959     05DD  1303               	bcf	3,6	;RP1=0, select bank0
   960     05DE  01B2               	clrf	___awdiv@sign
   961     05DF                     l1460:
   962     05DF  1FAE               	btfss	___awdiv@divisor+1,7
   963     05E0  2DE2               	goto	u1021
   964     05E1  2DE3               	goto	u1020
   965     05E2                     u1021:
   966     05E2  2DEA               	goto	l1466
   967     05E3                     u1020:
   968     05E3                     l1462:
   969     05E3  09AD               	comf	___awdiv@divisor,f
   970     05E4  09AE               	comf	___awdiv@divisor+1,f
   971     05E5  0AAD               	incf	___awdiv@divisor,f
   972     05E6  1903               	skipnz
   973     05E7  0AAE               	incf	___awdiv@divisor+1,f
   974     05E8                     l1464:
   975     05E8  01B2               	clrf	___awdiv@sign
   976     05E9  0AB2               	incf	___awdiv@sign,f
   977     05EA                     l1466:
   978     05EA  1FB0               	btfss	___awdiv@dividend+1,7
   979     05EB  2DED               	goto	u1031
   980     05EC  2DEE               	goto	u1030
   981     05ED                     u1031:
   982     05ED  2DF7               	goto	l1472
   983     05EE                     u1030:
   984     05EE                     l1468:
   985     05EE  09AF               	comf	___awdiv@dividend,f
   986     05EF  09B0               	comf	___awdiv@dividend+1,f
   987     05F0  0AAF               	incf	___awdiv@dividend,f
   988     05F1  1903               	skipnz
   989     05F2  0AB0               	incf	___awdiv@dividend+1,f
   990     05F3                     l1470:
   991     05F3  3001               	movlw	1
   992     05F4  00FF               	movwf	btemp+1
   993     05F5  087F               	movf	btemp+1,w
   994     05F6  06B2               	xorwf	___awdiv@sign,f
   995     05F7                     l1472:
   996     05F7  01B3               	clrf	___awdiv@quotient
   997     05F8  01B4               	clrf	___awdiv@quotient+1
   998     05F9                     l1474:
   999     05F9  082D               	movf	___awdiv@divisor,w
  1000     05FA  042E               	iorwf	___awdiv@divisor+1,w
  1001     05FB  1903               	btfsc	3,2
  1002     05FC  2DFE               	goto	u1041
  1003     05FD  2DFF               	goto	u1040
  1004     05FE                     u1041:
  1005     05FE  2E36               	goto	l1494
  1006     05FF                     u1040:
  1007     05FF                     l1476:
  1008     05FF  01B1               	clrf	___awdiv@counter
  1009     0600  0AB1               	incf	___awdiv@counter,f
  1010     0601  2E0D               	goto	l1482
  1011     0602                     l1478:
  1012     0602  3001               	movlw	1
  1013     0603                     u1055:
  1014     0603  1003               	clrc
  1015     0604  0DAD               	rlf	___awdiv@divisor,f
  1016     0605  0DAE               	rlf	___awdiv@divisor+1,f
  1017     0606  3EFF               	addlw	-1
  1018     0607  1D03               	skipz
  1019     0608  2E03               	goto	u1055
  1020     0609                     l1480:
  1021     0609  3001               	movlw	1
  1022     060A  00FF               	movwf	btemp+1
  1023     060B  087F               	movf	btemp+1,w
  1024     060C  07B1               	addwf	___awdiv@counter,f
  1025     060D                     l1482:
  1026     060D  1FAE               	btfss	___awdiv@divisor+1,7
  1027     060E  2E10               	goto	u1061
  1028     060F  2E11               	goto	u1060
  1029     0610                     u1061:
  1030     0610  2E02               	goto	l1478
  1031     0611                     u1060:
  1032     0611                     l1484:
  1033     0611  3001               	movlw	1
  1034     0612                     u1075:
  1035     0612  1003               	clrc
  1036     0613  0DB3               	rlf	___awdiv@quotient,f
  1037     0614  0DB4               	rlf	___awdiv@quotient+1,f
  1038     0615  3EFF               	addlw	-1
  1039     0616  1D03               	skipz
  1040     0617  2E12               	goto	u1075
  1041     0618  082E               	movf	___awdiv@divisor+1,w
  1042     0619  0230               	subwf	___awdiv@dividend+1,w
  1043     061A  1D03               	skipz
  1044     061B  2E1E               	goto	u1085
  1045     061C  082D               	movf	___awdiv@divisor,w
  1046     061D  022F               	subwf	___awdiv@dividend,w
  1047     061E                     u1085:
  1048     061E  1C03               	skipc
  1049     061F  2E21               	goto	u1081
  1050     0620  2E22               	goto	u1080
  1051     0621                     u1081:
  1052     0621  2E29               	goto	l1490
  1053     0622                     u1080:
  1054     0622                     l1486:
  1055     0622  082D               	movf	___awdiv@divisor,w
  1056     0623  02AF               	subwf	___awdiv@dividend,f
  1057     0624  082E               	movf	___awdiv@divisor+1,w
  1058     0625  1C03               	skipc
  1059     0626  03B0               	decf	___awdiv@dividend+1,f
  1060     0627  02B0               	subwf	___awdiv@dividend+1,f
  1061     0628                     l1488:
  1062     0628  1433               	bsf	___awdiv@quotient,0
  1063     0629                     l1490:
  1064     0629  3001               	movlw	1
  1065     062A                     u1095:
  1066     062A  1003               	clrc
  1067     062B  0CAE               	rrf	___awdiv@divisor+1,f
  1068     062C  0CAD               	rrf	___awdiv@divisor,f
  1069     062D  3EFF               	addlw	-1
  1070     062E  1D03               	skipz
  1071     062F  2E2A               	goto	u1095
  1072     0630                     l1492:
  1073     0630  3001               	movlw	1
  1074     0631  02B1               	subwf	___awdiv@counter,f
  1075     0632  1D03               	btfss	3,2
  1076     0633  2E35               	goto	u1101
  1077     0634  2E36               	goto	u1100
  1078     0635                     u1101:
  1079     0635  2E11               	goto	l1484
  1080     0636                     u1100:
  1081     0636                     l1494:
  1082     0636  0832               	movf	___awdiv@sign,w
  1083     0637  1903               	btfsc	3,2
  1084     0638  2E3A               	goto	u1111
  1085     0639  2E3B               	goto	u1110
  1086     063A                     u1111:
  1087     063A  2E40               	goto	l1498
  1088     063B                     u1110:
  1089     063B                     l1496:
  1090     063B  09B3               	comf	___awdiv@quotient,f
  1091     063C  09B4               	comf	___awdiv@quotient+1,f
  1092     063D  0AB3               	incf	___awdiv@quotient,f
  1093     063E  1903               	skipnz
  1094     063F  0AB4               	incf	___awdiv@quotient+1,f
  1095     0640                     l1498:
  1096     0640  0834               	movf	___awdiv@quotient+1,w
  1097     0641  00AE               	movwf	?___awdiv+1
  1098     0642  0833               	movf	___awdiv@quotient,w
  1099     0643  00AD               	movwf	?___awdiv
  1100     0644                     l393:
  1101     0644  0008               	return
  1102     0645                     __end_of___awdiv:
  1103                           
  1104                           	psect	text3
  1105     0645                     __ptext3:	
  1106 ;; *************** function _LCD_String_xy *****************
  1107 ;; Defined at:
  1108 ;;		line 125 in file "main.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  row             1    wreg     unsigned char 
  1111 ;;  pos             1   11[BANK0 ] unsigned char 
  1112 ;;  msg             1   12[BANK0 ] PTR const unsigned char 
  1113 ;;		 -> STR_20(13), STR_19(4), STR_18(12), STR_17(4), 
  1114 ;;		 -> STR_16(12), STR_15(4), STR_14(12), STR_13(4), 
  1115 ;;		 -> STR_12(12), STR_11(2), STR_10(2), STR_9(2), 
  1116 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  1117 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(8), 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  row             1   13[BANK0 ] unsigned char 
  1120 ;;  location        1   14[BANK0 ] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1130 ;;      Params:         0       2       0       0       0
  1131 ;;      Locals:         0       2       0       0       0
  1132 ;;      Temps:          0       0       0       0       0
  1133 ;;      Totals:         0       4       0       0       0
  1134 ;;Total ram usage:        4 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 7
  1137 ;; This function calls:
  1138 ;;		_LCD_Command
  1139 ;;		_LCD_String
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145     0645                     _LCD_String_xy:	
  1146                           ;psect for function _LCD_String_xy
  1147                           
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1151                           ;LCD_String_xy@row stored from wreg
  1152     0645  1283               	bcf	3,5	;RP0=0, select bank0
  1153     0646  1303               	bcf	3,6	;RP1=0, select bank0
  1154     0647  00AD               	movwf	LCD_String_xy@row
  1155     0648                     l1400:
  1156                           
  1157                           ;main.c: 127:     switch (row){
  1158     0648  2E71               	goto	l1420
  1159     0649                     l1402:
  1160                           
  1161                           ;main.c: 129:             location=(unsigned char)((0x80) + (pos));
  1162     0649  082B               	movf	LCD_String_xy@pos,w
  1163     064A  3E80               	addlw	128
  1164     064B  00AE               	movwf	LCD_String_xy@location
  1165     064C                     l1404:
  1166                           
  1167                           ;main.c: 130:             LCD_Command(location);
  1168     064C  082E               	movf	LCD_String_xy@location,w
  1169     064D  120A  118A  22DA  120A  118A  	fcall	_LCD_Command
  1170                           
  1171                           ;main.c: 131:             break;
  1172     0652  2E7F               	goto	l1422
  1173     0653                     l1406:
  1174                           
  1175                           ;main.c: 133:             location=(unsigned char)((0xC0) + (pos));
  1176     0653  082B               	movf	LCD_String_xy@pos,w
  1177     0654  3EC0               	addlw	192
  1178     0655  00AE               	movwf	LCD_String_xy@location
  1179     0656                     l1408:
  1180                           
  1181                           ;main.c: 134:             LCD_Command(location);
  1182     0656  082E               	movf	LCD_String_xy@location,w
  1183     0657  120A  118A  22DA  120A  118A  	fcall	_LCD_Command
  1184                           
  1185                           ;main.c: 135:             break;
  1186     065C  2E7F               	goto	l1422
  1187     065D                     l1410:
  1188                           
  1189                           ;main.c: 137:             location=(unsigned char)((0x94) + (pos));
  1190     065D  082B               	movf	LCD_String_xy@pos,w
  1191     065E  3E94               	addlw	148
  1192     065F  00AE               	movwf	LCD_String_xy@location
  1193     0660                     l1412:
  1194                           
  1195                           ;main.c: 138:             LCD_Command(location);
  1196     0660  082E               	movf	LCD_String_xy@location,w
  1197     0661  120A  118A  22DA  120A  118A  	fcall	_LCD_Command
  1198                           
  1199                           ;main.c: 139:             break;
  1200     0666  2E7F               	goto	l1422
  1201     0667                     l1414:
  1202                           
  1203                           ;main.c: 141:             location=(unsigned char)((0xD4) + (pos));
  1204     0667  082B               	movf	LCD_String_xy@pos,w
  1205     0668  3ED4               	addlw	212
  1206     0669  00AE               	movwf	LCD_String_xy@location
  1207     066A                     l1416:
  1208                           
  1209                           ;main.c: 142:             LCD_Command(location);
  1210     066A  082E               	movf	LCD_String_xy@location,w
  1211     066B  120A  118A  22DA  120A  118A  	fcall	_LCD_Command
  1212                           
  1213                           ;main.c: 143:             break;
  1214     0670  2E7F               	goto	l1422
  1215     0671                     l1420:
  1216     0671  082D               	movf	LCD_String_xy@row,w
  1217                           
  1218                           ; Switch size 1, requested type "simple"
  1219                           ; Number of cases is 4, Range of values is 0 to 3
  1220                           ; switch strategies available:
  1221                           ; Name         Instructions Cycles
  1222                           ; simple_byte           13     7 (average)
  1223                           ; direct_byte           20     8 (fixed)
  1224                           ; jumptable            260     6 (fixed)
  1225                           ;	Chosen strategy is simple_byte
  1226     0672  3A00               	xorlw	0	; case 0
  1227     0673  1903               	skipnz
  1228     0674  2E49               	goto	l1402
  1229     0675  3A01               	xorlw	1	; case 1
  1230     0676  1903               	skipnz
  1231     0677  2E53               	goto	l1406
  1232     0678  3A03               	xorlw	3	; case 2
  1233     0679  1903               	skipnz
  1234     067A  2E5D               	goto	l1410
  1235     067B  3A01               	xorlw	1	; case 3
  1236     067C  1903               	skipnz
  1237     067D  2E67               	goto	l1414
  1238     067E  2E7F               	goto	l1422
  1239     067F                     l1422:
  1240                           
  1241                           ;main.c: 146:     LCD_String(msg);
  1242     067F  1283               	bcf	3,5	;RP0=0, select bank0
  1243     0680  1303               	bcf	3,6	;RP1=0, select bank0
  1244     0681  082C               	movf	LCD_String_xy@msg,w
  1245     0682  120A  118A  271C  120A  118A  	fcall	_LCD_String
  1246     0687                     l91:
  1247     0687  0008               	return
  1248     0688                     __end_of_LCD_String_xy:
  1249                           
  1250                           	psect	text4
  1251     071C                     __ptext4:	
  1252 ;; *************** function _LCD_String *****************
  1253 ;; Defined at:
  1254 ;;		line 117 in file "main.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  msg             1    wreg     PTR const unsigned char 
  1257 ;;		 -> STR_20(13), STR_19(4), STR_18(12), STR_17(4), 
  1258 ;;		 -> STR_16(12), STR_15(4), STR_14(12), STR_13(4), 
  1259 ;;		 -> STR_12(12), STR_11(2), STR_10(2), STR_9(2), 
  1260 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  1261 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(8), 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  msg             1   10[BANK0 ] PTR const unsigned char 
  1264 ;;		 -> STR_20(13), STR_19(4), STR_18(12), STR_17(4), 
  1265 ;;		 -> STR_16(12), STR_15(4), STR_14(12), STR_13(4), 
  1266 ;;		 -> STR_12(12), STR_11(2), STR_10(2), STR_9(2), 
  1267 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  1268 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(8), 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       0       0       0       0
  1279 ;;      Locals:         0       1       0       0       0
  1280 ;;      Temps:          0       0       0       0       0
  1281 ;;      Totals:         0       1       0       0       0
  1282 ;;Total ram usage:        1 bytes
  1283 ;; Hardware stack levels used: 1
  1284 ;; Hardware stack levels required when called: 6
  1285 ;; This function calls:
  1286 ;;		_LCD_Char
  1287 ;; This function is called by:
  1288 ;;		_LCD_String_xy
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292     071C                     _LCD_String:	
  1293                           ;psect for function _LCD_String
  1294                           
  1295                           
  1296                           ;incstack = 0
  1297 ;; using string table level
  1298                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1299                           ;LCD_String@msg stored from wreg
  1300     071C  1283               	bcf	3,5	;RP0=0, select bank0
  1301     071D  1303               	bcf	3,6	;RP1=0, select bank0
  1302     071E  00AA               	movwf	LCD_String@msg
  1303     071F                     l1336:
  1304                           
  1305                           ;main.c: 118:  while((*msg)!=0)
  1306     071F  2F32               	goto	l1342
  1307     0720                     l1338:
  1308                           
  1309                           ;main.c: 119:  {;main.c: 120:         LCD_Char(*msg);
  1310     0720  082A               	movf	LCD_String@msg,w
  1311     0721  0084               	movwf	4
  1312     0722  120A  118A  2500  120A  118A  	fcall	stringdir
  1313     0727  120A  118A  2231  120A  118A  	fcall	_LCD_Char
  1314     072C                     l1340:
  1315                           
  1316                           ;main.c: 121:         msg++;
  1317     072C  3001               	movlw	1
  1318     072D  00FF               	movwf	btemp+1
  1319     072E  087F               	movf	btemp+1,w
  1320     072F  1283               	bcf	3,5	;RP0=0, select bank0
  1321     0730  1303               	bcf	3,6	;RP1=0, select bank0
  1322     0731  07AA               	addwf	LCD_String@msg,f
  1323     0732                     l1342:
  1324                           
  1325                           ;main.c: 118:  while((*msg)!=0)
  1326     0732  082A               	movf	LCD_String@msg,w
  1327     0733  0084               	movwf	4
  1328     0734  120A  118A  2500  120A  118A  	fcall	stringdir
  1329     0739  3A00               	xorlw	0
  1330     073A  1D03               	skipz
  1331     073B  2F3D               	goto	u941
  1332     073C  2F3E               	goto	u940
  1333     073D                     u941:
  1334     073D  2F20               	goto	l1338
  1335     073E                     u940:
  1336     073E                     l82:
  1337     073E  0008               	return
  1338     073F                     __end_of_LCD_String:
  1339                           
  1340                           	psect	text5
  1341     0231                     __ptext5:	
  1342 ;; *************** function _LCD_Char *****************
  1343 ;; Defined at:
  1344 ;;		line 70 in file "main.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  dat             1    wreg     unsigned char 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  dat             1    9[BANK0 ] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         0       1       0       0       0
  1360 ;;      Temps:          0       2       0       0       0
  1361 ;;      Totals:         0       3       0       0       0
  1362 ;;Total ram usage:        3 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 5
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_LCD_String
  1369 ;;		_LCD_Char_xy
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373     0231                     _LCD_Char:	
  1374                           ;psect for function _LCD_Char
  1375                           
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1379                           ;LCD_Char@dat stored from wreg
  1380     0231  1283               	bcf	3,5	;RP0=0, select bank0
  1381     0232  1303               	bcf	3,6	;RP1=0, select bank0
  1382     0233  00A9               	movwf	LCD_Char@dat
  1383     0234                     l1244:
  1384                           
  1385                           ;main.c: 72:     PORTDbits.RD4 = (dat >> 4) & 0x01;
  1386     0234  0829               	movf	LCD_Char@dat,w
  1387     0235  00A7               	movwf	??_LCD_Char
  1388     0236  3004               	movlw	4
  1389     0237                     u755:
  1390     0237  1003               	clrc
  1391     0238  0CA7               	rrf	??_LCD_Char,f
  1392     0239  3EFF               	addlw	-1
  1393     023A  1D03               	skipz
  1394     023B  2A37               	goto	u755
  1395     023C  0827               	movf	??_LCD_Char,w
  1396     023D  3901               	andlw	1
  1397     023E  00A8               	movwf	??_LCD_Char+1
  1398     023F  0EA8               	swapf	??_LCD_Char+1,f
  1399     0240  0808               	movf	8,w	;volatile
  1400     0241  0628               	xorwf	??_LCD_Char+1,w
  1401     0242  39EF               	andlw	-17
  1402     0243  0628               	xorwf	??_LCD_Char+1,w
  1403     0244  0088               	movwf	8	;volatile
  1404                           
  1405                           ;main.c: 73:     PORTDbits.RD5 = (dat >> 5) & 0x01;
  1406     0245  0829               	movf	LCD_Char@dat,w
  1407     0246  00A7               	movwf	??_LCD_Char
  1408     0247  3005               	movlw	5
  1409     0248                     u765:
  1410     0248  1003               	clrc
  1411     0249  0CA7               	rrf	??_LCD_Char,f
  1412     024A  3EFF               	addlw	-1
  1413     024B  1D03               	skipz
  1414     024C  2A48               	goto	u765
  1415     024D  0827               	movf	??_LCD_Char,w
  1416     024E  3901               	andlw	1
  1417     024F  00A8               	movwf	??_LCD_Char+1
  1418     0250  0EA8               	swapf	??_LCD_Char+1,f
  1419     0251  0DA8               	rlf	??_LCD_Char+1,f
  1420     0252  0808               	movf	8,w	;volatile
  1421     0253  0628               	xorwf	??_LCD_Char+1,w
  1422     0254  39DF               	andlw	-33
  1423     0255  0628               	xorwf	??_LCD_Char+1,w
  1424     0256  0088               	movwf	8	;volatile
  1425                           
  1426                           ;main.c: 74:     PORTDbits.RD6 = (dat >> 6) & 0x01;
  1427     0257  0829               	movf	LCD_Char@dat,w
  1428     0258  00A7               	movwf	??_LCD_Char
  1429     0259  3006               	movlw	6
  1430     025A                     u775:
  1431     025A  1003               	clrc
  1432     025B  0CA7               	rrf	??_LCD_Char,f
  1433     025C  3EFF               	addlw	-1
  1434     025D  1D03               	skipz
  1435     025E  2A5A               	goto	u775
  1436     025F  0827               	movf	??_LCD_Char,w
  1437     0260  3901               	andlw	1
  1438     0261  00A8               	movwf	??_LCD_Char+1
  1439     0262  0EA8               	swapf	??_LCD_Char+1,f
  1440     0263  0DA8               	rlf	??_LCD_Char+1,f
  1441     0264  0DA8               	rlf	??_LCD_Char+1,f
  1442     0265  0808               	movf	8,w	;volatile
  1443     0266  0628               	xorwf	??_LCD_Char+1,w
  1444     0267  39BF               	andlw	-65
  1445     0268  0628               	xorwf	??_LCD_Char+1,w
  1446     0269  0088               	movwf	8	;volatile
  1447                           
  1448                           ;main.c: 75:     PORTDbits.RD7 = (dat >> 7) & 0x01;
  1449     026A  0829               	movf	LCD_Char@dat,w
  1450     026B  00A7               	movwf	??_LCD_Char
  1451     026C  3007               	movlw	7
  1452     026D                     u785:
  1453     026D  1003               	clrc
  1454     026E  0CA7               	rrf	??_LCD_Char,f
  1455     026F  3EFF               	addlw	-1
  1456     0270  1D03               	skipz
  1457     0271  2A6D               	goto	u785
  1458     0272  0827               	movf	??_LCD_Char,w
  1459     0273  3901               	andlw	1
  1460     0274  00A8               	movwf	??_LCD_Char+1
  1461     0275  0CA8               	rrf	??_LCD_Char+1,f
  1462     0276  0CA8               	rrf	??_LCD_Char+1,f
  1463     0277  0808               	movf	8,w	;volatile
  1464     0278  0628               	xorwf	??_LCD_Char+1,w
  1465     0279  397F               	andlw	-129
  1466     027A  0628               	xorwf	??_LCD_Char+1,w
  1467     027B  0088               	movwf	8	;volatile
  1468     027C                     l1246:
  1469                           
  1470                           ;main.c: 77:  PORTDbits.RD0 = 1;
  1471     027C  1408               	bsf	8,0	;volatile
  1472     027D                     l1248:
  1473                           
  1474                           ;main.c: 78:  PORTDbits.RD1 = 1;
  1475     027D  1488               	bsf	8,1	;volatile
  1476     027E                     l1250:
  1477                           
  1478                           ;main.c: 79:  __nop();
  1479     027E  0000               	nop
  1480     027F                     l1252:
  1481                           
  1482                           ;main.c: 80:  PORTDbits.RD1 = 0;
  1483     027F  1283               	bcf	3,5	;RP0=0, select bank0
  1484     0280  1303               	bcf	3,6	;RP1=0, select bank0
  1485     0281  1088               	bcf	8,1	;volatile
  1486     0282                     l1254:
  1487                           
  1488                           ;main.c: 81:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1489     0282  3007               	movlw	7
  1490     0283  1283               	bcf	3,5	;RP0=0, select bank0
  1491     0284  1303               	bcf	3,6	;RP1=0, select bank0
  1492     0285  00A8               	movwf	??_LCD_Char+1
  1493     0286  307C               	movlw	124
  1494     0287  00A7               	movwf	??_LCD_Char
  1495     0288                     u1377:
  1496     0288  0BA7               	decfsz	??_LCD_Char,f
  1497     0289  2A88               	goto	u1377
  1498     028A  0BA8               	decfsz	??_LCD_Char+1,f
  1499     028B  2A88               	goto	u1377
  1500     028C  0000               	nop
  1501     028D                     l1256:
  1502                           
  1503                           ;main.c: 83:     PORTDbits.RD4 = (dat >> 0) & 0x01;
  1504     028D  1283               	bcf	3,5	;RP0=0, select bank0
  1505     028E  1303               	bcf	3,6	;RP1=0, select bank0
  1506     028F  0829               	movf	LCD_Char@dat,w
  1507     0290  3901               	andlw	1
  1508     0291  00A7               	movwf	??_LCD_Char
  1509     0292  0EA7               	swapf	??_LCD_Char,f
  1510     0293  0808               	movf	8,w	;volatile
  1511     0294  0627               	xorwf	??_LCD_Char,w
  1512     0295  39EF               	andlw	-17
  1513     0296  0627               	xorwf	??_LCD_Char,w
  1514     0297  0088               	movwf	8	;volatile
  1515     0298                     l1258:
  1516                           
  1517                           ;main.c: 84:     PORTDbits.RD5 = (dat >> 1) & 0x01;
  1518     0298  0829               	movf	LCD_Char@dat,w
  1519     0299  00A7               	movwf	??_LCD_Char
  1520     029A  1003               	clrc
  1521     029B  0C27               	rrf	??_LCD_Char,w
  1522     029C  3901               	andlw	1
  1523     029D  00A8               	movwf	??_LCD_Char+1
  1524     029E  0EA8               	swapf	??_LCD_Char+1,f
  1525     029F  0DA8               	rlf	??_LCD_Char+1,f
  1526     02A0  0808               	movf	8,w	;volatile
  1527     02A1  0628               	xorwf	??_LCD_Char+1,w
  1528     02A2  39DF               	andlw	-33
  1529     02A3  0628               	xorwf	??_LCD_Char+1,w
  1530     02A4  0088               	movwf	8	;volatile
  1531     02A5                     l1260:
  1532                           
  1533                           ;main.c: 85:     PORTDbits.RD6 = (dat >> 2) & 0x01;
  1534     02A5  0829               	movf	LCD_Char@dat,w
  1535     02A6  00A7               	movwf	??_LCD_Char
  1536     02A7  3002               	movlw	2
  1537     02A8                     u795:
  1538     02A8  1003               	clrc
  1539     02A9  0CA7               	rrf	??_LCD_Char,f
  1540     02AA  3EFF               	addlw	-1
  1541     02AB  1D03               	skipz
  1542     02AC  2AA8               	goto	u795
  1543     02AD  0827               	movf	??_LCD_Char,w
  1544     02AE  3901               	andlw	1
  1545     02AF  00A8               	movwf	??_LCD_Char+1
  1546     02B0  0EA8               	swapf	??_LCD_Char+1,f
  1547     02B1  0DA8               	rlf	??_LCD_Char+1,f
  1548     02B2  0DA8               	rlf	??_LCD_Char+1,f
  1549     02B3  0808               	movf	8,w	;volatile
  1550     02B4  0628               	xorwf	??_LCD_Char+1,w
  1551     02B5  39BF               	andlw	-65
  1552     02B6  0628               	xorwf	??_LCD_Char+1,w
  1553     02B7  0088               	movwf	8	;volatile
  1554     02B8                     l1262:
  1555                           
  1556                           ;main.c: 86:     PORTDbits.RD7 = (dat >> 3) & 0x01;
  1557     02B8  0829               	movf	LCD_Char@dat,w
  1558     02B9  00A7               	movwf	??_LCD_Char
  1559     02BA  3003               	movlw	3
  1560     02BB                     u805:
  1561     02BB  1003               	clrc
  1562     02BC  0CA7               	rrf	??_LCD_Char,f
  1563     02BD  3EFF               	addlw	-1
  1564     02BE  1D03               	skipz
  1565     02BF  2ABB               	goto	u805
  1566     02C0  0827               	movf	??_LCD_Char,w
  1567     02C1  3901               	andlw	1
  1568     02C2  00A8               	movwf	??_LCD_Char+1
  1569     02C3  0CA8               	rrf	??_LCD_Char+1,f
  1570     02C4  0CA8               	rrf	??_LCD_Char+1,f
  1571     02C5  0808               	movf	8,w	;volatile
  1572     02C6  0628               	xorwf	??_LCD_Char+1,w
  1573     02C7  397F               	andlw	-129
  1574     02C8  0628               	xorwf	??_LCD_Char+1,w
  1575     02C9  0088               	movwf	8	;volatile
  1576     02CA                     l1264:
  1577                           
  1578                           ;main.c: 87:  PORTDbits.RD1 = 1;
  1579     02CA  1488               	bsf	8,1	;volatile
  1580     02CB                     l1266:
  1581                           
  1582                           ;main.c: 88:  __nop();
  1583     02CB  0000               	nop
  1584     02CC                     l1268:
  1585                           
  1586                           ;main.c: 89:  PORTDbits.RD1 = 0;
  1587     02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1588     02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1589     02CE  1088               	bcf	8,1	;volatile
  1590     02CF                     l1270:
  1591                           
  1592                           ;main.c: 90:  _delay((unsigned long)((3)*(20000000/4000.0)));
  1593     02CF  3014               	movlw	20
  1594     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1595     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1596     02D2  00A8               	movwf	??_LCD_Char+1
  1597     02D3  3079               	movlw	121
  1598     02D4  00A7               	movwf	??_LCD_Char
  1599     02D5                     u1387:
  1600     02D5  0BA7               	decfsz	??_LCD_Char,f
  1601     02D6  2AD5               	goto	u1387
  1602     02D7  0BA8               	decfsz	??_LCD_Char+1,f
  1603     02D8  2AD5               	goto	u1387
  1604     02D9                     l67:
  1605     02D9  0008               	return
  1606     02DA                     __end_of_LCD_Char:
  1607                           
  1608                           	psect	text6
  1609     06C7                     __ptext6:	
  1610 ;; *************** function _LCD_Init *****************
  1611 ;; Defined at:
  1612 ;;		line 59 in file "main.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0, pclath, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1626 ;;      Params:         0       0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0
  1628 ;;      Temps:          0       3       0       0       0
  1629 ;;      Totals:         0       3       0       0       0
  1630 ;;Total ram usage:        3 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; Hardware stack levels required when called: 6
  1633 ;; This function calls:
  1634 ;;		_LCD_Command
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640     06C7                     _LCD_Init:	
  1641                           ;psect for function _LCD_Init
  1642                           
  1643     06C7                     l1388:	
  1644                           ;incstack = 0
  1645                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1646                           
  1647                           
  1648                           ;main.c: 60:     _delay((unsigned long)((40)*(20000000/4000.0)));
  1649     06C7  3002               	movlw	2
  1650     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1651     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1652     06CA  00AC               	movwf	??_LCD_Init+2
  1653     06CB  3004               	movlw	4
  1654     06CC  00AB               	movwf	??_LCD_Init+1
  1655     06CD  30B9               	movlw	185
  1656     06CE  00AA               	movwf	??_LCD_Init
  1657     06CF                     u1397:
  1658     06CF  0BAA               	decfsz	??_LCD_Init,f
  1659     06D0  2ECF               	goto	u1397
  1660     06D1  0BAB               	decfsz	??_LCD_Init+1,f
  1661     06D2  2ECF               	goto	u1397
  1662     06D3  0BAC               	decfsz	??_LCD_Init+2,f
  1663     06D4  2ECF               	goto	u1397
  1664     06D5  2ED6               	nop2
  1665     06D6                     l1390:
  1666                           
  1667                           ;main.c: 61:     LCD_Command(0x02);
  1668     06D6  3002               	movlw	2
  1669     06D7  120A  118A  22DA  120A  118A  	fcall	_LCD_Command
  1670     06DC                     l1392:
  1671                           
  1672                           ;main.c: 63:     LCD_Command(0x28);
  1673     06DC  3028               	movlw	40
  1674     06DD  120A  118A  22DA  120A  118A  	fcall	_LCD_Command
  1675     06E2                     l1394:
  1676                           
  1677                           ;main.c: 65:  LCD_Command(0x01);
  1678     06E2  3001               	movlw	1
  1679     06E3  120A  118A  22DA  120A  118A  	fcall	_LCD_Command
  1680     06E8                     l1396:
  1681                           
  1682                           ;main.c: 66:     LCD_Command(0x0c);
  1683     06E8  300C               	movlw	12
  1684     06E9  120A  118A  22DA  120A  118A  	fcall	_LCD_Command
  1685     06EE                     l1398:
  1686                           
  1687                           ;main.c: 67:  LCD_Command(0x06);
  1688     06EE  3006               	movlw	6
  1689     06EF  120A  118A  22DA  120A  118A  	fcall	_LCD_Command
  1690     06F4                     l64:
  1691     06F4  0008               	return
  1692     06F5                     __end_of_LCD_Init:
  1693                           
  1694                           	psect	text7
  1695     07A1                     __ptext7:	
  1696 ;; *************** function _LCD_Clear *****************
  1697 ;; Defined at:
  1698 ;;		line 149 in file "main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          0       2       0       0       0
  1715 ;;      Totals:         0       2       0       0       0
  1716 ;;Total ram usage:        2 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 6
  1719 ;; This function calls:
  1720 ;;		_LCD_Command
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726     07A1                     _LCD_Clear:	
  1727                           ;psect for function _LCD_Clear
  1728                           
  1729     07A1                     l1424:	
  1730                           ;incstack = 0
  1731                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1732                           
  1733                           
  1734                           ;main.c: 150:     LCD_Command(0x01);
  1735     07A1  3001               	movlw	1
  1736     07A2  120A  118A  22DA  120A  118A  	fcall	_LCD_Command
  1737     07A7                     l1426:
  1738                           
  1739                           ;main.c: 151:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1740     07A7  3014               	movlw	20
  1741     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1742     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1743     07AA  00AB               	movwf	??_LCD_Clear+1
  1744     07AB  3079               	movlw	121
  1745     07AC  00AA               	movwf	??_LCD_Clear
  1746     07AD                     u1407:
  1747     07AD  0BAA               	decfsz	??_LCD_Clear,f
  1748     07AE  2FAD               	goto	u1407
  1749     07AF  0BAB               	decfsz	??_LCD_Clear+1,f
  1750     07B0  2FAD               	goto	u1407
  1751     07B1                     l94:
  1752     07B1  0008               	return
  1753     07B2                     __end_of_LCD_Clear:
  1754                           
  1755                           	psect	text8
  1756     02DA                     __ptext8:	
  1757 ;; *************** function _LCD_Command *****************
  1758 ;; Defined at:
  1759 ;;		line 37 in file "main.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  cmd             1    wreg     unsigned char 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  cmd             1    9[BANK0 ] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, status,0
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1773 ;;      Params:         0       0       0       0       0
  1774 ;;      Locals:         0       1       0       0       0
  1775 ;;      Temps:          0       2       0       0       0
  1776 ;;      Totals:         0       3       0       0       0
  1777 ;;Total ram usage:        3 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 5
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_LCD_Init
  1784 ;;		_LCD_String_xy
  1785 ;;		_LCD_Clear
  1786 ;;		_LCD_Char_xy
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790     02DA                     _LCD_Command:	
  1791                           ;psect for function _LCD_Command
  1792                           
  1793                           
  1794                           ;incstack = 0
  1795                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  1796                           ;LCD_Command@cmd stored from wreg
  1797     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1798     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1799     02DC  00A9               	movwf	LCD_Command@cmd
  1800     02DD                     l1308:
  1801                           
  1802                           ;main.c: 39:     PORTDbits.RD4 = (cmd >> 4) & 0x01;
  1803     02DD  0829               	movf	LCD_Command@cmd,w
  1804     02DE  00A7               	movwf	??_LCD_Command
  1805     02DF  3004               	movlw	4
  1806     02E0                     u885:
  1807     02E0  1003               	clrc
  1808     02E1  0CA7               	rrf	??_LCD_Command,f
  1809     02E2  3EFF               	addlw	-1
  1810     02E3  1D03               	skipz
  1811     02E4  2AE0               	goto	u885
  1812     02E5  0827               	movf	??_LCD_Command,w
  1813     02E6  3901               	andlw	1
  1814     02E7  00A8               	movwf	??_LCD_Command+1
  1815     02E8  0EA8               	swapf	??_LCD_Command+1,f
  1816     02E9  0808               	movf	8,w	;volatile
  1817     02EA  0628               	xorwf	??_LCD_Command+1,w
  1818     02EB  39EF               	andlw	-17
  1819     02EC  0628               	xorwf	??_LCD_Command+1,w
  1820     02ED  0088               	movwf	8	;volatile
  1821                           
  1822                           ;main.c: 40:     PORTDbits.RD5 = (cmd >> 5) & 0x01;
  1823     02EE  0829               	movf	LCD_Command@cmd,w
  1824     02EF  00A7               	movwf	??_LCD_Command
  1825     02F0  3005               	movlw	5
  1826     02F1                     u895:
  1827     02F1  1003               	clrc
  1828     02F2  0CA7               	rrf	??_LCD_Command,f
  1829     02F3  3EFF               	addlw	-1
  1830     02F4  1D03               	skipz
  1831     02F5  2AF1               	goto	u895
  1832     02F6  0827               	movf	??_LCD_Command,w
  1833     02F7  3901               	andlw	1
  1834     02F8  00A8               	movwf	??_LCD_Command+1
  1835     02F9  0EA8               	swapf	??_LCD_Command+1,f
  1836     02FA  0DA8               	rlf	??_LCD_Command+1,f
  1837     02FB  0808               	movf	8,w	;volatile
  1838     02FC  0628               	xorwf	??_LCD_Command+1,w
  1839     02FD  39DF               	andlw	-33
  1840     02FE  0628               	xorwf	??_LCD_Command+1,w
  1841     02FF  0088               	movwf	8	;volatile
  1842                           
  1843                           ;main.c: 41:     PORTDbits.RD6 = (cmd >> 6) & 0x01;
  1844     0300  0829               	movf	LCD_Command@cmd,w
  1845     0301  00A7               	movwf	??_LCD_Command
  1846     0302  3006               	movlw	6
  1847     0303                     u905:
  1848     0303  1003               	clrc
  1849     0304  0CA7               	rrf	??_LCD_Command,f
  1850     0305  3EFF               	addlw	-1
  1851     0306  1D03               	skipz
  1852     0307  2B03               	goto	u905
  1853     0308  0827               	movf	??_LCD_Command,w
  1854     0309  3901               	andlw	1
  1855     030A  00A8               	movwf	??_LCD_Command+1
  1856     030B  0EA8               	swapf	??_LCD_Command+1,f
  1857     030C  0DA8               	rlf	??_LCD_Command+1,f
  1858     030D  0DA8               	rlf	??_LCD_Command+1,f
  1859     030E  0808               	movf	8,w	;volatile
  1860     030F  0628               	xorwf	??_LCD_Command+1,w
  1861     0310  39BF               	andlw	-65
  1862     0311  0628               	xorwf	??_LCD_Command+1,w
  1863     0312  0088               	movwf	8	;volatile
  1864                           
  1865                           ;main.c: 42:     PORTDbits.RD7 = (cmd >> 7) & 0x01;
  1866     0313  0829               	movf	LCD_Command@cmd,w
  1867     0314  00A7               	movwf	??_LCD_Command
  1868     0315  3007               	movlw	7
  1869     0316                     u915:
  1870     0316  1003               	clrc
  1871     0317  0CA7               	rrf	??_LCD_Command,f
  1872     0318  3EFF               	addlw	-1
  1873     0319  1D03               	skipz
  1874     031A  2B16               	goto	u915
  1875     031B  0827               	movf	??_LCD_Command,w
  1876     031C  3901               	andlw	1
  1877     031D  00A8               	movwf	??_LCD_Command+1
  1878     031E  0CA8               	rrf	??_LCD_Command+1,f
  1879     031F  0CA8               	rrf	??_LCD_Command+1,f
  1880     0320  0808               	movf	8,w	;volatile
  1881     0321  0628               	xorwf	??_LCD_Command+1,w
  1882     0322  397F               	andlw	-129
  1883     0323  0628               	xorwf	??_LCD_Command+1,w
  1884     0324  0088               	movwf	8	;volatile
  1885     0325                     l1310:
  1886                           
  1887                           ;main.c: 43:  PORTDbits.RD0 = 0;
  1888     0325  1008               	bcf	8,0	;volatile
  1889     0326                     l1312:
  1890                           
  1891                           ;main.c: 44:  PORTDbits.RD1 = 1;
  1892     0326  1488               	bsf	8,1	;volatile
  1893     0327                     l1314:
  1894                           
  1895                           ;main.c: 45:  __nop();
  1896     0327  0000               	nop
  1897     0328                     l1316:
  1898                           
  1899                           ;main.c: 46:  PORTDbits.RD1 = 0;
  1900     0328  1283               	bcf	3,5	;RP0=0, select bank0
  1901     0329  1303               	bcf	3,6	;RP1=0, select bank0
  1902     032A  1088               	bcf	8,1	;volatile
  1903     032B                     l1318:
  1904                           
  1905                           ;main.c: 47:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1906     032B  3007               	movlw	7
  1907     032C  1283               	bcf	3,5	;RP0=0, select bank0
  1908     032D  1303               	bcf	3,6	;RP1=0, select bank0
  1909     032E  00A8               	movwf	??_LCD_Command+1
  1910     032F  307C               	movlw	124
  1911     0330  00A7               	movwf	??_LCD_Command
  1912     0331                     u1417:
  1913     0331  0BA7               	decfsz	??_LCD_Command,f
  1914     0332  2B31               	goto	u1417
  1915     0333  0BA8               	decfsz	??_LCD_Command+1,f
  1916     0334  2B31               	goto	u1417
  1917     0335  0000               	nop
  1918     0336                     l1320:
  1919                           
  1920                           ;main.c: 49:     PORTDbits.RD4 = (cmd >> 0) & 0x01;
  1921     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1922     0337  1303               	bcf	3,6	;RP1=0, select bank0
  1923     0338  0829               	movf	LCD_Command@cmd,w
  1924     0339  3901               	andlw	1
  1925     033A  00A7               	movwf	??_LCD_Command
  1926     033B  0EA7               	swapf	??_LCD_Command,f
  1927     033C  0808               	movf	8,w	;volatile
  1928     033D  0627               	xorwf	??_LCD_Command,w
  1929     033E  39EF               	andlw	-17
  1930     033F  0627               	xorwf	??_LCD_Command,w
  1931     0340  0088               	movwf	8	;volatile
  1932     0341                     l1322:
  1933                           
  1934                           ;main.c: 50:     PORTDbits.RD5 = (cmd >> 1) & 0x01;
  1935     0341  0829               	movf	LCD_Command@cmd,w
  1936     0342  00A7               	movwf	??_LCD_Command
  1937     0343  1003               	clrc
  1938     0344  0C27               	rrf	??_LCD_Command,w
  1939     0345  3901               	andlw	1
  1940     0346  00A8               	movwf	??_LCD_Command+1
  1941     0347  0EA8               	swapf	??_LCD_Command+1,f
  1942     0348  0DA8               	rlf	??_LCD_Command+1,f
  1943     0349  0808               	movf	8,w	;volatile
  1944     034A  0628               	xorwf	??_LCD_Command+1,w
  1945     034B  39DF               	andlw	-33
  1946     034C  0628               	xorwf	??_LCD_Command+1,w
  1947     034D  0088               	movwf	8	;volatile
  1948     034E                     l1324:
  1949                           
  1950                           ;main.c: 51:     PORTDbits.RD6 = (cmd >> 2) & 0x01;
  1951     034E  0829               	movf	LCD_Command@cmd,w
  1952     034F  00A7               	movwf	??_LCD_Command
  1953     0350  3002               	movlw	2
  1954     0351                     u925:
  1955     0351  1003               	clrc
  1956     0352  0CA7               	rrf	??_LCD_Command,f
  1957     0353  3EFF               	addlw	-1
  1958     0354  1D03               	skipz
  1959     0355  2B51               	goto	u925
  1960     0356  0827               	movf	??_LCD_Command,w
  1961     0357  3901               	andlw	1
  1962     0358  00A8               	movwf	??_LCD_Command+1
  1963     0359  0EA8               	swapf	??_LCD_Command+1,f
  1964     035A  0DA8               	rlf	??_LCD_Command+1,f
  1965     035B  0DA8               	rlf	??_LCD_Command+1,f
  1966     035C  0808               	movf	8,w	;volatile
  1967     035D  0628               	xorwf	??_LCD_Command+1,w
  1968     035E  39BF               	andlw	-65
  1969     035F  0628               	xorwf	??_LCD_Command+1,w
  1970     0360  0088               	movwf	8	;volatile
  1971     0361                     l1326:
  1972                           
  1973                           ;main.c: 52:     PORTDbits.RD7 = (cmd >> 3) & 0x01;
  1974     0361  0829               	movf	LCD_Command@cmd,w
  1975     0362  00A7               	movwf	??_LCD_Command
  1976     0363  3003               	movlw	3
  1977     0364                     u935:
  1978     0364  1003               	clrc
  1979     0365  0CA7               	rrf	??_LCD_Command,f
  1980     0366  3EFF               	addlw	-1
  1981     0367  1D03               	skipz
  1982     0368  2B64               	goto	u935
  1983     0369  0827               	movf	??_LCD_Command,w
  1984     036A  3901               	andlw	1
  1985     036B  00A8               	movwf	??_LCD_Command+1
  1986     036C  0CA8               	rrf	??_LCD_Command+1,f
  1987     036D  0CA8               	rrf	??_LCD_Command+1,f
  1988     036E  0808               	movf	8,w	;volatile
  1989     036F  0628               	xorwf	??_LCD_Command+1,w
  1990     0370  397F               	andlw	-129
  1991     0371  0628               	xorwf	??_LCD_Command+1,w
  1992     0372  0088               	movwf	8	;volatile
  1993     0373                     l1328:
  1994                           
  1995                           ;main.c: 53:  PORTDbits.RD1 = 1;
  1996     0373  1488               	bsf	8,1	;volatile
  1997     0374                     l1330:
  1998                           
  1999                           ;main.c: 54:  __nop();
  2000     0374  0000               	nop
  2001     0375                     l1332:
  2002                           
  2003                           ;main.c: 55:  PORTDbits.RD1 = 0;
  2004     0375  1283               	bcf	3,5	;RP0=0, select bank0
  2005     0376  1303               	bcf	3,6	;RP1=0, select bank0
  2006     0377  1088               	bcf	8,1	;volatile
  2007     0378                     l1334:
  2008                           
  2009                           ;main.c: 56:  _delay((unsigned long)((3)*(20000000/4000.0)));
  2010     0378  3014               	movlw	20
  2011     0379  1283               	bcf	3,5	;RP0=0, select bank0
  2012     037A  1303               	bcf	3,6	;RP1=0, select bank0
  2013     037B  00A8               	movwf	??_LCD_Command+1
  2014     037C  3079               	movlw	121
  2015     037D  00A7               	movwf	??_LCD_Command
  2016     037E                     u1427:
  2017     037E  0BA7               	decfsz	??_LCD_Command,f
  2018     037F  2B7E               	goto	u1427
  2019     0380  0BA8               	decfsz	??_LCD_Command+1,f
  2020     0381  2B7E               	goto	u1427
  2021     0382                     l61:
  2022     0382  0008               	return
  2023     0383                     __end_of_LCD_Command:
  2024                           
  2025                           	psect	text9
  2026     0023                     __ptext9:	
  2027 ;; *************** function _teclado *****************
  2028 ;; Defined at:
  2029 ;;		line 173 in file "main.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0
  2045 ;;      Temps:          0       7       0       0       0
  2046 ;;      Totals:         0       7       0       0       0
  2047 ;;Total ram usage:        7 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; Hardware stack levels required when called: 4
  2050 ;; This function calls:
  2051 ;;		_Manual_Limpa
  2052 ;;		_Multiplicador
  2053 ;;		i1_LCD_Clear
  2054 ;;		i1_LCD_String_xy
  2055 ;; This function is called by:
  2056 ;;		Interrupt level 1
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060     0023                     _teclado:	
  2061                           ;psect for function _teclado
  2062                           
  2063     0023                     i1l1526:
  2064                           
  2065                           ;main.c: 174:     if(INTCONbits.T0IF){
  2066     0023  1D0B               	btfss	11,2	;volatile
  2067     0024  2826               	goto	u112_21
  2068     0025  2827               	goto	u112_20
  2069     0026                     u112_21:
  2070     0026  2A24               	goto	i1l146
  2071     0027                     u112_20:
  2072     0027                     i1l1528:
  2073                           
  2074                           ;main.c: 175:         INTCONbits.T0IF = 0x00;
  2075     0027  110B               	bcf	11,2	;volatile
  2076     0028                     i1l1530:
  2077                           
  2078                           ;main.c: 176:         TMR0 = 0x6C;
  2079     0028  306C               	movlw	108
  2080     0029  0081               	movwf	1	;volatile
  2081     002A                     i1l1532:
  2082                           
  2083                           ;main.c: 178:         if(PORTBbits.RB0 == 0x01 && controle == 0x01){
  2084     002A  1C06               	btfss	6,0	;volatile
  2085     002B  282D               	goto	u113_21
  2086     002C  282E               	goto	u113_20
  2087     002D                     u113_21:
  2088     002D  289F               	goto	i1l111
  2089     002E                     u113_20:
  2090     002E                     i1l1534:
  2091     002E  037B               	decf	_controle,w
  2092     002F  1D03               	btfss	3,2
  2093     0030  2832               	goto	u114_21
  2094     0031  2833               	goto	u114_20
  2095     0032                     u114_21:
  2096     0032  289F               	goto	i1l111
  2097     0033                     u114_20:
  2098     0033                     i1l1536:
  2099                           
  2100                           ;main.c: 179:             controle = 0x02;
  2101     0033  3002               	movlw	2
  2102     0034  00FB               	movwf	_controle
  2103     0035                     i1l1538:
  2104                           
  2105                           ;main.c: 180:             PORTBbits.RB0 = 0x00;
  2106     0035  1006               	bcf	6,0	;volatile
  2107     0036                     i1l1540:
  2108                           
  2109                           ;main.c: 181:             PORTBbits.RB1 = 0x01;
  2110     0036  1486               	bsf	6,1	;volatile
  2111     0037                     i1l1542:
  2112                           
  2113                           ;main.c: 182:             PORTBbits.RB2 = 0x01;
  2114     0037  1506               	bsf	6,2	;volatile
  2115     0038                     i1l1544:
  2116                           
  2117                           ;main.c: 183:             PORTBbits.RB3 = 0x01;
  2118     0038  1586               	bsf	6,3	;volatile
  2119     0039                     i1l1546:
  2120                           
  2121                           ;main.c: 185:             if(PORTBbits.RB4 == 0x00){
  2122     0039  1A06               	btfsc	6,4	;volatile
  2123     003A  283C               	goto	u115_21
  2124     003B  283D               	goto	u115_20
  2125     003C                     u115_21:
  2126     003C  2865               	goto	i1l112
  2127     003D                     u115_20:
  2128     003D                     i1l1548:
  2129                           
  2130                           ;main.c: 186:                 Manual_Limpa();
  2131     003D  120A  118A  278D  120A  118A  	fcall	_Manual_Limpa
  2132                           
  2133                           ;main.c: 187:                 LCD_String_xy(1,i,"1");
  2134     0042  0878               	movf	_i,w
  2135     0043  00F4               	movwf	i1LCD_String_xy@pos
  2136     0044  3058               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2137     0045  00F5               	movwf	i1LCD_String_xy@msg
  2138     0046  3001               	movlw	1
  2139     0047  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2140                           
  2141                           ;main.c: 188:                 Multiplicador(1);
  2142     004C  3001               	movlw	1
  2143     004D  120A  118A  275E  120A  118A  	fcall	_Multiplicador
  2144     0052                     i1l1550:
  2145                           
  2146                           ;main.c: 189:                 i++;
  2147     0052  3001               	movlw	1
  2148     0053  00FF               	movwf	btemp+1
  2149     0054  087F               	movf	btemp+1,w
  2150     0055  07F8               	addwf	_i,f
  2151     0056                     i1l1552:
  2152                           
  2153                           ;main.c: 190:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  2154     0056  3008               	movlw	8
  2155     0057  1283               	bcf	3,5	;RP0=0, select bank0
  2156     0058  1303               	bcf	3,6	;RP1=0, select bank0
  2157     0059  00A2               	movwf	??_teclado+2
  2158     005A  309D               	movlw	157
  2159     005B  00A1               	movwf	??_teclado+1
  2160     005C  3005               	movlw	5
  2161     005D  00A0               	movwf	??_teclado
  2162     005E                     u143_27:
  2163     005E  0BA0               	decfsz	??_teclado,f
  2164     005F  285E               	goto	u143_27
  2165     0060  0BA1               	decfsz	??_teclado+1,f
  2166     0061  285E               	goto	u143_27
  2167     0062  0BA2               	decfsz	??_teclado+2,f
  2168     0063  285E               	goto	u143_27
  2169                           
  2170                           ;main.c: 191:             }
  2171     0064  2A24               	goto	i1l146
  2172     0065                     i1l112:	
  2173                           ;main.c: 192:             else if(PORTBbits.RB5 == 0x00){
  2174                           
  2175     0065  1A86               	btfsc	6,5	;volatile
  2176     0066  2868               	goto	u116_21
  2177     0067  2869               	goto	u116_20
  2178     0068                     u116_21:
  2179     0068  287F               	goto	i1l114
  2180     0069                     u116_20:
  2181     0069                     i1l1554:
  2182                           
  2183                           ;main.c: 193:                 Manual_Limpa();
  2184     0069  120A  118A  278D  120A  118A  	fcall	_Manual_Limpa
  2185                           
  2186                           ;main.c: 194:                 LCD_String_xy(1,i,"4");
  2187     006E  0878               	movf	_i,w
  2188     006F  00F4               	movwf	i1LCD_String_xy@pos
  2189     0070  305E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2190     0071  00F5               	movwf	i1LCD_String_xy@msg
  2191     0072  3001               	movlw	1
  2192     0073  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2193                           
  2194                           ;main.c: 195:                 Multiplicador(4);
  2195     0078  3004               	movlw	4
  2196     0079  120A  118A  275E  120A  118A  	fcall	_Multiplicador
  2197     007E  2852               	goto	i1l1550
  2198     007F                     i1l114:	
  2199                           ;main.c: 199:             else if(PORTBbits.RB6 == 0x00){
  2200                           
  2201     007F  1B06               	btfsc	6,6	;volatile
  2202     0080  2882               	goto	u117_21
  2203     0081  2883               	goto	u117_20
  2204     0082                     u117_21:
  2205     0082  2899               	goto	i1l116
  2206     0083                     u117_20:
  2207     0083                     i1l1560:
  2208                           
  2209                           ;main.c: 200:                 Manual_Limpa();
  2210     0083  120A  118A  278D  120A  118A  	fcall	_Manual_Limpa
  2211                           
  2212                           ;main.c: 201:                 LCD_String_xy(1,i,"7");
  2213     0088  0878               	movf	_i,w
  2214     0089  00F4               	movwf	i1LCD_String_xy@pos
  2215     008A  3064               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2216     008B  00F5               	movwf	i1LCD_String_xy@msg
  2217     008C  3001               	movlw	1
  2218     008D  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2219                           
  2220                           ;main.c: 202:                 Multiplicador(7);
  2221     0092  3007               	movlw	7
  2222     0093  120A  118A  275E  120A  118A  	fcall	_Multiplicador
  2223     0098  2852               	goto	i1l1550
  2224     0099                     i1l116:	
  2225                           ;main.c: 206:             else if(PORTBbits.RB7 == 0x00){
  2226                           
  2227     0099  1B86               	btfsc	6,7	;volatile
  2228     009A  289C               	goto	u118_21
  2229     009B  289D               	goto	u118_20
  2230     009C                     u118_21:
  2231     009C  289E               	goto	i1l117
  2232     009D                     u118_20:
  2233     009D  2856               	goto	i1l1552
  2234     009E                     i1l117:
  2235     009E  2A24               	goto	i1l146
  2236     009F                     i1l111:	
  2237                           ;main.c: 211:         else if(PORTBbits.RB1 == 0x01 && controle == 0x02){
  2238                           
  2239     009F  1C86               	btfss	6,1	;volatile
  2240     00A0  28A2               	goto	u119_21
  2241     00A1  28A3               	goto	u119_20
  2242     00A2                     u119_21:
  2243     00A2  2917               	goto	i1l120
  2244     00A3                     u119_20:
  2245     00A3                     i1l1568:
  2246     00A3  3002               	movlw	2
  2247     00A4  067B               	xorwf	_controle,w
  2248     00A5  1D03               	btfss	3,2
  2249     00A6  28A8               	goto	u120_21
  2250     00A7  28A9               	goto	u120_20
  2251     00A8                     u120_21:
  2252     00A8  2917               	goto	i1l120
  2253     00A9                     u120_20:
  2254     00A9                     i1l1570:
  2255                           
  2256                           ;main.c: 212:             controle = 0x03;
  2257     00A9  3003               	movlw	3
  2258     00AA  00FB               	movwf	_controle
  2259     00AB                     i1l1572:
  2260                           
  2261                           ;main.c: 213:             PORTBbits.RB0 = 0x01;
  2262     00AB  1406               	bsf	6,0	;volatile
  2263     00AC                     i1l1574:
  2264                           
  2265                           ;main.c: 214:             PORTBbits.RB1 = 0x00;
  2266     00AC  1086               	bcf	6,1	;volatile
  2267     00AD                     i1l1576:
  2268                           
  2269                           ;main.c: 215:             PORTBbits.RB2 = 0x01;
  2270     00AD  1506               	bsf	6,2	;volatile
  2271     00AE                     i1l1578:
  2272                           
  2273                           ;main.c: 216:             PORTBbits.RB3 = 0x01;
  2274     00AE  1586               	bsf	6,3	;volatile
  2275     00AF                     i1l1580:
  2276                           
  2277                           ;main.c: 218:             if(PORTBbits.RB4 == 0x00){
  2278     00AF  1A06               	btfsc	6,4	;volatile
  2279     00B0  28B2               	goto	u121_21
  2280     00B1  28B3               	goto	u121_20
  2281     00B2                     u121_21:
  2282     00B2  28C9               	goto	i1l121
  2283     00B3                     u121_20:
  2284     00B3                     i1l1582:
  2285                           
  2286                           ;main.c: 219:                 Manual_Limpa();
  2287     00B3  120A  118A  278D  120A  118A  	fcall	_Manual_Limpa
  2288                           
  2289                           ;main.c: 220:                 LCD_String_xy(1,i,"2");
  2290     00B8  0878               	movf	_i,w
  2291     00B9  00F4               	movwf	i1LCD_String_xy@pos
  2292     00BA  305A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2293     00BB  00F5               	movwf	i1LCD_String_xy@msg
  2294     00BC  3001               	movlw	1
  2295     00BD  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2296                           
  2297                           ;main.c: 221:                 Multiplicador(2);
  2298     00C2  3002               	movlw	2
  2299     00C3  120A  118A  275E  120A  118A  	fcall	_Multiplicador
  2300     00C8  2852               	goto	i1l1550
  2301     00C9                     i1l121:	
  2302                           ;main.c: 225:             else if(PORTBbits.RB5 == 0x00){
  2303                           
  2304     00C9  1A86               	btfsc	6,5	;volatile
  2305     00CA  28CC               	goto	u122_21
  2306     00CB  28CD               	goto	u122_20
  2307     00CC                     u122_21:
  2308     00CC  28E3               	goto	i1l123
  2309     00CD                     u122_20:
  2310     00CD                     i1l1588:
  2311                           
  2312                           ;main.c: 226:                 Manual_Limpa();
  2313     00CD  120A  118A  278D  120A  118A  	fcall	_Manual_Limpa
  2314                           
  2315                           ;main.c: 227:                 LCD_String_xy(1,i,"5");
  2316     00D2  0878               	movf	_i,w
  2317     00D3  00F4               	movwf	i1LCD_String_xy@pos
  2318     00D4  3060               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2319     00D5  00F5               	movwf	i1LCD_String_xy@msg
  2320     00D6  3001               	movlw	1
  2321     00D7  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2322                           
  2323                           ;main.c: 228:                 Multiplicador(5);
  2324     00DC  3005               	movlw	5
  2325     00DD  120A  118A  275E  120A  118A  	fcall	_Multiplicador
  2326     00E2  2852               	goto	i1l1550
  2327     00E3                     i1l123:	
  2328                           ;main.c: 232:             else if(PORTBbits.RB6 == 0x00){
  2329                           
  2330     00E3  1B06               	btfsc	6,6	;volatile
  2331     00E4  28E6               	goto	u123_21
  2332     00E5  28E7               	goto	u123_20
  2333     00E6                     u123_21:
  2334     00E6  28FD               	goto	i1l125
  2335     00E7                     u123_20:
  2336     00E7                     i1l1594:
  2337                           
  2338                           ;main.c: 233:                 Manual_Limpa();
  2339     00E7  120A  118A  278D  120A  118A  	fcall	_Manual_Limpa
  2340                           
  2341                           ;main.c: 234:                 LCD_String_xy(1,i,"8");
  2342     00EC  0878               	movf	_i,w
  2343     00ED  00F4               	movwf	i1LCD_String_xy@pos
  2344     00EE  3066               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2345     00EF  00F5               	movwf	i1LCD_String_xy@msg
  2346     00F0  3001               	movlw	1
  2347     00F1  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2348                           
  2349                           ;main.c: 235:                 Multiplicador(8);
  2350     00F6  3008               	movlw	8
  2351     00F7  120A  118A  275E  120A  118A  	fcall	_Multiplicador
  2352     00FC  2852               	goto	i1l1550
  2353     00FD                     i1l125:	
  2354                           ;main.c: 239:             else if(PORTBbits.RB7 == 0x00){
  2355                           
  2356     00FD  1B86               	btfsc	6,7	;volatile
  2357     00FE  2900               	goto	u124_21
  2358     00FF  2901               	goto	u124_20
  2359     0100                     u124_21:
  2360     0100  289E               	goto	i1l117
  2361     0101                     u124_20:
  2362     0101                     i1l1600:
  2363                           
  2364                           ;main.c: 240:                 Manual_Limpa();
  2365     0101  120A  118A  278D  120A  118A  	fcall	_Manual_Limpa
  2366                           
  2367                           ;main.c: 241:                 LCD_String_xy(1,i,"0");
  2368     0106  0878               	movf	_i,w
  2369     0107  00F4               	movwf	i1LCD_String_xy@pos
  2370     0108  3056               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2371     0109  00F5               	movwf	i1LCD_String_xy@msg
  2372     010A  3001               	movlw	1
  2373     010B  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2374                           
  2375                           ;main.c: 242:                 Multiplicador(0);
  2376     0110  3000               	movlw	0
  2377     0111  120A  118A  275E  120A  118A  	fcall	_Multiplicador
  2378     0116  2852               	goto	i1l1550
  2379     0117                     i1l120:	
  2380                           ;main.c: 247:         else if(PORTBbits.RB2 == 0x01 && controle == 0x03){
  2381                           
  2382     0117  1D06               	btfss	6,2	;volatile
  2383     0118  291A               	goto	u125_21
  2384     0119  291B               	goto	u125_20
  2385     011A                     u125_21:
  2386     011A  298C               	goto	i1l129
  2387     011B                     u125_20:
  2388     011B                     i1l1606:
  2389     011B  3003               	movlw	3
  2390     011C  067B               	xorwf	_controle,w
  2391     011D  1D03               	btfss	3,2
  2392     011E  2920               	goto	u126_21
  2393     011F  2921               	goto	u126_20
  2394     0120                     u126_21:
  2395     0120  298C               	goto	i1l129
  2396     0121                     u126_20:
  2397     0121                     i1l1608:
  2398                           
  2399                           ;main.c: 248:             controle = 0x04;
  2400     0121  3004               	movlw	4
  2401     0122  00FB               	movwf	_controle
  2402     0123                     i1l1610:
  2403                           
  2404                           ;main.c: 249:             PORTBbits.RB0 = 0x01;
  2405     0123  1406               	bsf	6,0	;volatile
  2406     0124                     i1l1612:
  2407                           
  2408                           ;main.c: 250:             PORTBbits.RB1 = 0x01;
  2409     0124  1486               	bsf	6,1	;volatile
  2410     0125                     i1l1614:
  2411                           
  2412                           ;main.c: 251:             PORTBbits.RB2 = 0x00;
  2413     0125  1106               	bcf	6,2	;volatile
  2414     0126                     i1l1616:
  2415                           
  2416                           ;main.c: 252:             PORTBbits.RB3 = 0x01;
  2417     0126  1586               	bsf	6,3	;volatile
  2418     0127                     i1l1618:
  2419                           
  2420                           ;main.c: 254:             if(PORTBbits.RB4 == 0x00){
  2421     0127  1A06               	btfsc	6,4	;volatile
  2422     0128  292A               	goto	u127_21
  2423     0129  292B               	goto	u127_20
  2424     012A                     u127_21:
  2425     012A  2941               	goto	i1l130
  2426     012B                     u127_20:
  2427     012B                     i1l1620:
  2428                           
  2429                           ;main.c: 255:                 Manual_Limpa();
  2430     012B  120A  118A  278D  120A  118A  	fcall	_Manual_Limpa
  2431                           
  2432                           ;main.c: 256:                 LCD_String_xy(1,i,"3");
  2433     0130  0878               	movf	_i,w
  2434     0131  00F4               	movwf	i1LCD_String_xy@pos
  2435     0132  305C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2436     0133  00F5               	movwf	i1LCD_String_xy@msg
  2437     0134  3001               	movlw	1
  2438     0135  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2439                           
  2440                           ;main.c: 257:                 Multiplicador(3);
  2441     013A  3003               	movlw	3
  2442     013B  120A  118A  275E  120A  118A  	fcall	_Multiplicador
  2443     0140  2852               	goto	i1l1550
  2444     0141                     i1l130:	
  2445                           ;main.c: 261:             else if(PORTBbits.RB5 == 0x00){
  2446                           
  2447     0141  1A86               	btfsc	6,5	;volatile
  2448     0142  2944               	goto	u128_21
  2449     0143  2945               	goto	u128_20
  2450     0144                     u128_21:
  2451     0144  295B               	goto	i1l132
  2452     0145                     u128_20:
  2453     0145                     i1l1626:
  2454                           
  2455                           ;main.c: 262:                 Manual_Limpa();
  2456     0145  120A  118A  278D  120A  118A  	fcall	_Manual_Limpa
  2457                           
  2458                           ;main.c: 263:                 LCD_String_xy(1,i,"6");
  2459     014A  0878               	movf	_i,w
  2460     014B  00F4               	movwf	i1LCD_String_xy@pos
  2461     014C  3062               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2462     014D  00F5               	movwf	i1LCD_String_xy@msg
  2463     014E  3001               	movlw	1
  2464     014F  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2465                           
  2466                           ;main.c: 264:                 Multiplicador(6);
  2467     0154  3006               	movlw	6
  2468     0155  120A  118A  275E  120A  118A  	fcall	_Multiplicador
  2469     015A  2852               	goto	i1l1550
  2470     015B                     i1l132:	
  2471                           ;main.c: 269:             else if(PORTBbits.RB6 == 0x00){
  2472                           
  2473     015B  1B06               	btfsc	6,6	;volatile
  2474     015C  295E               	goto	u129_21
  2475     015D  295F               	goto	u129_20
  2476     015E                     u129_21:
  2477     015E  2975               	goto	i1l134
  2478     015F                     u129_20:
  2479     015F                     i1l1632:
  2480                           
  2481                           ;main.c: 270:                 Manual_Limpa();
  2482     015F  120A  118A  278D  120A  118A  	fcall	_Manual_Limpa
  2483                           
  2484                           ;main.c: 271:                 LCD_String_xy(1,i,"9");
  2485     0164  0878               	movf	_i,w
  2486     0165  00F4               	movwf	i1LCD_String_xy@pos
  2487     0166  3068               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2488     0167  00F5               	movwf	i1LCD_String_xy@msg
  2489     0168  3001               	movlw	1
  2490     0169  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2491                           
  2492                           ;main.c: 272:                 Multiplicador(9);
  2493     016E  3009               	movlw	9
  2494     016F  120A  118A  275E  120A  118A  	fcall	_Multiplicador
  2495     0174  2852               	goto	i1l1550
  2496     0175                     i1l134:	
  2497                           ;main.c: 276:             else if(PORTBbits.RB7 == 0x00){
  2498                           
  2499     0175  1B86               	btfsc	6,7	;volatile
  2500     0176  2978               	goto	u130_21
  2501     0177  2979               	goto	u130_20
  2502     0178                     u130_21:
  2503     0178  289E               	goto	i1l117
  2504     0179                     u130_20:
  2505     0179                     i1l1638:
  2506                           
  2507                           ;main.c: 277:                 PWM_DUTY = PWM_MANUAL;
  2508     0179  0879               	movf	_PWM_MANUAL,w
  2509     017A  00B7               	movwf	_PWM_DUTY
  2510     017B                     i1l1640:
  2511                           
  2512                           ;main.c: 278:                 i = 0;
  2513     017B  01F8               	clrf	_i
  2514     017C                     i1l1642:
  2515                           
  2516                           ;main.c: 279:                 PWM_MANUAL = 0;
  2517     017C  01F9               	clrf	_PWM_MANUAL
  2518                           
  2519                           ;main.c: 280:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  2520     017D  3008               	movlw	8
  2521     017E  1283               	bcf	3,5	;RP0=0, select bank0
  2522     017F  1303               	bcf	3,6	;RP1=0, select bank0
  2523     0180  00A2               	movwf	??_teclado+2
  2524     0181  309D               	movlw	157
  2525     0182  00A1               	movwf	??_teclado+1
  2526     0183  3005               	movlw	5
  2527     0184  00A0               	movwf	??_teclado
  2528     0185                     u144_27:
  2529     0185  0BA0               	decfsz	??_teclado,f
  2530     0186  2985               	goto	u144_27
  2531     0187  0BA1               	decfsz	??_teclado+1,f
  2532     0188  2985               	goto	u144_27
  2533     0189  0BA2               	decfsz	??_teclado+2,f
  2534     018A  2985               	goto	u144_27
  2535     018B  2A24               	goto	i1l146
  2536     018C                     i1l129:	
  2537                           ;main.c: 283:         else if(PORTBbits.RB3 == 0x01 && controle == 0x04){
  2538                           
  2539     018C  1D86               	btfss	6,3	;volatile
  2540     018D  298F               	goto	u131_21
  2541     018E  2990               	goto	u131_20
  2542     018F                     u131_21:
  2543     018F  2A24               	goto	i1l146
  2544     0190                     u131_20:
  2545     0190                     i1l1644:
  2546     0190  3004               	movlw	4
  2547     0191  067B               	xorwf	_controle,w
  2548     0192  1D03               	btfss	3,2
  2549     0193  2995               	goto	u132_21
  2550     0194  2996               	goto	u132_20
  2551     0195                     u132_21:
  2552     0195  2A24               	goto	i1l146
  2553     0196                     u132_20:
  2554     0196                     i1l1646:
  2555                           
  2556                           ;main.c: 284:             controle = 0x01;
  2557     0196  01FB               	clrf	_controle
  2558     0197  0AFB               	incf	_controle,f
  2559                           
  2560                           ;main.c: 285:             PORTBbits.RB0 = 0x01;
  2561     0198  1406               	bsf	6,0	;volatile
  2562                           
  2563                           ;main.c: 286:             PORTBbits.RB1 = 0x01;
  2564     0199  1486               	bsf	6,1	;volatile
  2565                           
  2566                           ;main.c: 287:             PORTBbits.RB2 = 0x01;
  2567     019A  1506               	bsf	6,2	;volatile
  2568                           
  2569                           ;main.c: 288:             PORTBbits.RB3 = 0x00;
  2570     019B  1186               	bcf	6,3	;volatile
  2571                           
  2572                           ;main.c: 290:             if(PORTBbits.RB4 == 0x00){
  2573     019C  1A06               	btfsc	6,4	;volatile
  2574     019D  299F               	goto	u133_21
  2575     019E  29A0               	goto	u133_20
  2576     019F                     u133_21:
  2577     019F  29BE               	goto	i1l139
  2578     01A0                     u133_20:
  2579     01A0                     i1l1648:
  2580                           
  2581                           ;main.c: 291:                 LCD_Clear();
  2582     01A0  120A  118A  27B2  120A  118A  	fcall	i1_LCD_Clear
  2583     01A5                     i1l1650:
  2584                           
  2585                           ;main.c: 292:                 LCD_String_xy(0,1,"PWM MODO A:");
  2586     01A5  01F4               	clrf	i1LCD_String_xy@pos
  2587     01A6  0AF4               	incf	i1LCD_String_xy@pos,f
  2588     01A7  300E               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2589     01A8  00F5               	movwf	i1LCD_String_xy@msg
  2590     01A9  3000               	movlw	0
  2591     01AA  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2592     01AF                     i1l1652:
  2593                           
  2594                           ;main.c: 293:                 PWM_DUTY = 25;
  2595     01AF  3019               	movlw	25
  2596     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2597     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2598     01B2  00B7               	movwf	_PWM_DUTY
  2599     01B3                     i1l1654:
  2600                           
  2601                           ;main.c: 294:                 LCD_String_xy(1,1,"25%");
  2602     01B3  01F4               	clrf	i1LCD_String_xy@pos
  2603     01B4  0AF4               	incf	i1LCD_String_xy@pos,f
  2604     01B5  304A               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2605     01B6  00F5               	movwf	i1LCD_String_xy@msg
  2606     01B7  3001               	movlw	1
  2607     01B8  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2608     01BD  2856               	goto	i1l1552
  2609     01BE                     i1l139:	
  2610                           ;main.c: 297:             else if(PORTBbits.RB5 == 0x00){
  2611                           
  2612     01BE  1A86               	btfsc	6,5	;volatile
  2613     01BF  29C1               	goto	u134_21
  2614     01C0  29C2               	goto	u134_20
  2615     01C1                     u134_21:
  2616     01C1  29E0               	goto	i1l141
  2617     01C2                     u134_20:
  2618     01C2                     i1l1658:
  2619                           
  2620                           ;main.c: 298:                 LCD_Clear();
  2621     01C2  120A  118A  27B2  120A  118A  	fcall	i1_LCD_Clear
  2622     01C7                     i1l1660:
  2623                           
  2624                           ;main.c: 299:                 LCD_String_xy(0,1,"PWM MODO B:");
  2625     01C7  01F4               	clrf	i1LCD_String_xy@pos
  2626     01C8  0AF4               	incf	i1LCD_String_xy@pos,f
  2627     01C9  301A               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2628     01CA  00F5               	movwf	i1LCD_String_xy@msg
  2629     01CB  3000               	movlw	0
  2630     01CC  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2631     01D1                     i1l1662:
  2632                           
  2633                           ;main.c: 300:                 PWM_DUTY = 50;
  2634     01D1  3032               	movlw	50
  2635     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2636     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2637     01D4  00B7               	movwf	_PWM_DUTY
  2638     01D5                     i1l1664:
  2639                           
  2640                           ;main.c: 301:                 LCD_String_xy(1,1,"50%");
  2641     01D5  01F4               	clrf	i1LCD_String_xy@pos
  2642     01D6  0AF4               	incf	i1LCD_String_xy@pos,f
  2643     01D7  3046               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2644     01D8  00F5               	movwf	i1LCD_String_xy@msg
  2645     01D9  3001               	movlw	1
  2646     01DA  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2647     01DF  2856               	goto	i1l1552
  2648     01E0                     i1l141:	
  2649                           ;main.c: 304:             else if(PORTBbits.RB6 == 0x00){
  2650                           
  2651     01E0  1B06               	btfsc	6,6	;volatile
  2652     01E1  29E3               	goto	u135_21
  2653     01E2  29E4               	goto	u135_20
  2654     01E3                     u135_21:
  2655     01E3  2A02               	goto	i1l143
  2656     01E4                     u135_20:
  2657     01E4                     i1l1668:
  2658                           
  2659                           ;main.c: 305:                 LCD_Clear();
  2660     01E4  120A  118A  27B2  120A  118A  	fcall	i1_LCD_Clear
  2661     01E9                     i1l1670:
  2662                           
  2663                           ;main.c: 306:                 LCD_String_xy(0,1,"PWM MODO C:");
  2664     01E9  01F4               	clrf	i1LCD_String_xy@pos
  2665     01EA  0AF4               	incf	i1LCD_String_xy@pos,f
  2666     01EB  3026               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2667     01EC  00F5               	movwf	i1LCD_String_xy@msg
  2668     01ED  3000               	movlw	0
  2669     01EE  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2670     01F3                     i1l1672:
  2671                           
  2672                           ;main.c: 307:                 PWM_DUTY = 75;
  2673     01F3  304B               	movlw	75
  2674     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2675     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2676     01F6  00B7               	movwf	_PWM_DUTY
  2677     01F7                     i1l1674:
  2678                           
  2679                           ;main.c: 308:                 LCD_String_xy(1,1,"75%");
  2680     01F7  01F4               	clrf	i1LCD_String_xy@pos
  2681     01F8  0AF4               	incf	i1LCD_String_xy@pos,f
  2682     01F9  304E               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2683     01FA  00F5               	movwf	i1LCD_String_xy@msg
  2684     01FB  3001               	movlw	1
  2685     01FC  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2686     0201  2856               	goto	i1l1552
  2687     0202                     i1l143:	
  2688                           ;main.c: 311:             else if(PORTBbits.RB7 == 0x00){
  2689                           
  2690     0202  1B86               	btfsc	6,7	;volatile
  2691     0203  2A05               	goto	u136_21
  2692     0204  2A06               	goto	u136_20
  2693     0205                     u136_21:
  2694     0205  289E               	goto	i1l117
  2695     0206                     u136_20:
  2696     0206                     i1l1678:
  2697                           
  2698                           ;main.c: 312:                 LCD_Clear();
  2699     0206  120A  118A  27B2  120A  118A  	fcall	i1_LCD_Clear
  2700     020B                     i1l1680:
  2701                           
  2702                           ;main.c: 313:                 LCD_String_xy(0,1,"PWM MODO D:");
  2703     020B  01F4               	clrf	i1LCD_String_xy@pos
  2704     020C  0AF4               	incf	i1LCD_String_xy@pos,f
  2705     020D  3032               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2706     020E  00F5               	movwf	i1LCD_String_xy@msg
  2707     020F  3000               	movlw	0
  2708     0210  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2709     0215                     i1l1682:
  2710                           
  2711                           ;main.c: 314:                 PWM_DUTY = 95;
  2712     0215  305F               	movlw	95
  2713     0216  1283               	bcf	3,5	;RP0=0, select bank0
  2714     0217  1303               	bcf	3,6	;RP1=0, select bank0
  2715     0218  00B7               	movwf	_PWM_DUTY
  2716     0219                     i1l1684:
  2717                           
  2718                           ;main.c: 315:                 LCD_String_xy(1,1,"95%");
  2719     0219  01F4               	clrf	i1LCD_String_xy@pos
  2720     021A  0AF4               	incf	i1LCD_String_xy@pos,f
  2721     021B  3052               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2722     021C  00F5               	movwf	i1LCD_String_xy@msg
  2723     021D  3001               	movlw	1
  2724     021E  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2725     0223  2856               	goto	i1l1552
  2726     0224                     i1l146:
  2727     0224  1283               	bcf	3,5	;RP0=0, select bank0
  2728     0225  1303               	bcf	3,6	;RP1=0, select bank0
  2729     0226  0826               	movf	??_teclado+6,w
  2730     0227  00FF               	movwf	btemp+1
  2731     0228  0825               	movf	??_teclado+5,w
  2732     0229  008A               	movwf	10
  2733     022A  0824               	movf	??_teclado+4,w
  2734     022B  0084               	movwf	4
  2735     022C  0E23               	swapf	??_teclado+3,w
  2736     022D  0083               	movwf	3
  2737     022E  0EFE               	swapf	btemp,f
  2738     022F  0E7E               	swapf	btemp,w
  2739     0230  0009               	retfie
  2740     0231                     __end_of_teclado:
  2741                           
  2742                           	psect	intentry
  2743     0004                     __pintentry:	
  2744                           ;incstack = 0
  2745                           ; Regs used in _teclado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2746                           
  2747     0004                     interrupt_function:
  2748     007E                     saved_w	set	btemp
  2749     0004  00FE               	movwf	btemp
  2750     0005  0E03               	swapf	3,w
  2751     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2752     0007  1303               	bcf	3,6	;RP1=0, select bank0
  2753     0008  00A3               	movwf	??_teclado+3
  2754     0009  0804               	movf	4,w
  2755     000A  00A4               	movwf	??_teclado+4
  2756     000B  080A               	movf	10,w
  2757     000C  00A5               	movwf	??_teclado+5
  2758     000D  087F               	movf	btemp+1,w
  2759     000E  00A6               	movwf	??_teclado+6
  2760     000F  120A  118A  2823   	ljmp	_teclado
  2761                           
  2762                           	psect	text10
  2763     075E                     __ptext10:	
  2764 ;; *************** function _Multiplicador *****************
  2765 ;; Defined at:
  2766 ;;		line 161 in file "main.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  valor           1    wreg     unsigned char 
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  valor           1    3[COMMON] unsigned char 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2780 ;;      Params:         0       0       0       0       0
  2781 ;;      Locals:         1       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0
  2783 ;;      Totals:         1       0       0       0       0
  2784 ;;Total ram usage:        1 bytes
  2785 ;; Hardware stack levels used: 1
  2786 ;; Hardware stack levels required when called: 1
  2787 ;; This function calls:
  2788 ;;		___bmul
  2789 ;; This function is called by:
  2790 ;;		_teclado
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794     075E                     _Multiplicador:	
  2795                           ;psect for function _Multiplicador
  2796                           
  2797                           
  2798                           ;incstack = 0
  2799                           ; Regs used in _Multiplicador: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2800                           ;Multiplicador@valor stored from wreg
  2801     075E  00F3               	movwf	Multiplicador@valor
  2802     075F                     i1l1434:
  2803                           
  2804                           ;main.c: 162:     switch (i){
  2805     075F  2F6F               	goto	i1l1442
  2806     0760                     i1l1436:
  2807                           
  2808                           ;main.c: 164:             PWM_MANUAL = PWM_MANUAL + (valor * 10);
  2809     0760  300A               	movlw	10
  2810     0761  00F0               	movwf	___bmul@multiplicand
  2811     0762  0873               	movf	Multiplicador@valor,w
  2812     0763  120A  118A  2778  120A  118A  	fcall	___bmul
  2813     0768  0779               	addwf	_PWM_MANUAL,w
  2814     0769  00F9               	movwf	_PWM_MANUAL
  2815                           
  2816                           ;main.c: 165:             break;
  2817     076A  2F77               	goto	i1l105
  2818     076B                     i1l1438:
  2819                           
  2820                           ;main.c: 167:             PWM_MANUAL = PWM_MANUAL + (valor * 1);
  2821     076B  0873               	movf	Multiplicador@valor,w
  2822     076C  0779               	addwf	_PWM_MANUAL,w
  2823     076D  00F9               	movwf	_PWM_MANUAL
  2824                           
  2825                           ;main.c: 168:             break;
  2826     076E  2F77               	goto	i1l105
  2827     076F                     i1l1442:
  2828     076F  0878               	movf	_i,w
  2829                           
  2830                           ; Switch size 1, requested type "simple"
  2831                           ; Number of cases is 2, Range of values is 0 to 1
  2832                           ; switch strategies available:
  2833                           ; Name         Instructions Cycles
  2834                           ; simple_byte            7     4 (average)
  2835                           ; direct_byte           14     8 (fixed)
  2836                           ; jumptable            260     6 (fixed)
  2837                           ;	Chosen strategy is simple_byte
  2838     0770  3A00               	xorlw	0	; case 0
  2839     0771  1903               	skipnz
  2840     0772  2F60               	goto	i1l1436
  2841     0773  3A01               	xorlw	1	; case 1
  2842     0774  1903               	skipnz
  2843     0775  2F6B               	goto	i1l1438
  2844     0776  2F77               	goto	i1l105
  2845     0777                     i1l105:
  2846     0777  0008               	return
  2847     0778                     __end_of_Multiplicador:
  2848                           
  2849                           	psect	text11
  2850     0778                     __ptext11:	
  2851 ;; *************** function ___bmul *****************
  2852 ;; Defined at:
  2853 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  multiplier      1    wreg     unsigned char 
  2856 ;;  multiplicand    1    0[COMMON] unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  multiplier      1    2[COMMON] unsigned char 
  2859 ;;  product         1    1[COMMON] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      unsigned char 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, btemp+1
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         1       0       0       0       0
  2870 ;;      Locals:         2       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0
  2872 ;;      Totals:         3       0       0       0       0
  2873 ;;Total ram usage:        3 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_Multiplicador
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882     0778                     ___bmul:	
  2883                           ;psect for function ___bmul
  2884                           
  2885                           
  2886                           ;incstack = 0
  2887                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2888                           ;___bmul@multiplier stored from wreg
  2889     0778  00F2               	movwf	___bmul@multiplier
  2890     0779                     i1l1344:
  2891     0779  01F1               	clrf	___bmul@product
  2892     077A                     i1l1346:
  2893     077A  1C72               	btfss	___bmul@multiplier,0
  2894     077B  2F7D               	goto	u95_21
  2895     077C  2F7E               	goto	u95_20
  2896     077D                     u95_21:
  2897     077D  2F82               	goto	i1l1350
  2898     077E                     u95_20:
  2899     077E                     i1l1348:
  2900     077E  0870               	movf	___bmul@multiplicand,w
  2901     077F  00FF               	movwf	btemp+1
  2902     0780  087F               	movf	btemp+1,w
  2903     0781  07F1               	addwf	___bmul@product,f
  2904     0782                     i1l1350:
  2905     0782  1003               	clrc
  2906     0783  0DF0               	rlf	___bmul@multiplicand,f
  2907     0784                     i1l1352:
  2908     0784  1003               	clrc
  2909     0785  0CF2               	rrf	___bmul@multiplier,f
  2910     0786                     i1l1354:
  2911     0786  0872               	movf	___bmul@multiplier,w
  2912     0787  1D03               	btfss	3,2
  2913     0788  2F8A               	goto	u96_21
  2914     0789  2F8B               	goto	u96_20
  2915     078A                     u96_21:
  2916     078A  2F7A               	goto	i1l1346
  2917     078B                     u96_20:
  2918     078B                     i1l1356:
  2919     078B  0871               	movf	___bmul@product,w
  2920     078C                     i1l266:
  2921     078C  0008               	return
  2922     078D                     __end_of___bmul:
  2923                           
  2924                           	psect	text12
  2925     078D                     __ptext12:	
  2926 ;; *************** function _Manual_Limpa *****************
  2927 ;; Defined at:
  2928 ;;		line 154 in file "main.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2942 ;;      Params:         0       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0
  2945 ;;      Totals:         0       0       0       0       0
  2946 ;;Total ram usage:        0 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 3
  2949 ;; This function calls:
  2950 ;;		i1_LCD_Clear
  2951 ;;		i1_LCD_String_xy
  2952 ;; This function is called by:
  2953 ;;		_teclado
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957     078D                     _Manual_Limpa:	
  2958                           ;psect for function _Manual_Limpa
  2959                           
  2960     078D                     i1l1428:	
  2961                           ;incstack = 0
  2962                           ; Regs used in _Manual_Limpa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2963                           
  2964                           
  2965                           ;main.c: 155:     if(i == 0){
  2966     078D  0878               	movf	_i,w
  2967     078E  1D03               	btfss	3,2
  2968     078F  2F91               	goto	u97_21
  2969     0790  2F92               	goto	u97_20
  2970     0791                     u97_21:
  2971     0791  2FA0               	goto	i1l98
  2972     0792                     u97_20:
  2973     0792                     i1l1430:
  2974                           
  2975                           ;main.c: 156:         LCD_Clear();
  2976     0792  120A  118A  27B2  120A  118A  	fcall	i1_LCD_Clear
  2977     0797                     i1l1432:
  2978                           
  2979                           ;main.c: 157:         LCD_String_xy(0,0,"MANUAL:");
  2980     0797  01F4               	clrf	i1LCD_String_xy@pos
  2981     0798  303E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2982     0799  00F5               	movwf	i1LCD_String_xy@msg
  2983     079A  3000               	movlw	0
  2984     079B  120A  118A  2688  120A  118A  	fcall	i1_LCD_String_xy
  2985     07A0                     i1l98:
  2986     07A0  0008               	return
  2987     07A1                     __end_of_Manual_Limpa:
  2988                           
  2989                           	psect	text13
  2990     0688                     __ptext13:	
  2991 ;; *************** function i1_LCD_String_xy *****************
  2992 ;; Defined at:
  2993 ;;		line 125 in file "main.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  row             1    wreg     unsigned char 
  2996 ;;  pos             1    4[COMMON] unsigned char 
  2997 ;;  msg             1    5[COMMON] PTR const unsigned char 
  2998 ;;		 -> STR_20(13), STR_19(4), STR_18(12), STR_17(4), 
  2999 ;;		 -> STR_16(12), STR_15(4), STR_14(12), STR_13(4), 
  3000 ;;		 -> STR_12(12), STR_11(2), STR_10(2), STR_9(2), 
  3001 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  3002 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(8), 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  row             1    6[COMMON] unsigned char 
  3005 ;;  location        1    7[COMMON] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3015 ;;      Params:         2       0       0       0       0
  3016 ;;      Locals:         2       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0
  3018 ;;      Totals:         4       0       0       0       0
  3019 ;;Total ram usage:        4 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 2
  3022 ;; This function calls:
  3023 ;;		i1_LCD_Command
  3024 ;;		i1_LCD_String
  3025 ;; This function is called by:
  3026 ;;		_Manual_Limpa
  3027 ;;		_teclado
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031     0688                     i1_LCD_String_xy:	
  3032                           ;psect for function i1_LCD_String_xy
  3033                           
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in i1_LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3037                           ;i1LCD_String_xy@row stored from wreg
  3038     0688  00F6               	movwf	i1LCD_String_xy@row
  3039     0689                     i1l1360:
  3040                           
  3041                           ;main.c: 127:     switch (row){
  3042     0689  2EB2               	goto	i1l1380
  3043     068A                     i1l1362:
  3044                           
  3045                           ;main.c: 129:             location=(unsigned char)((0x80) + (pos));
  3046     068A  0874               	movf	i1LCD_String_xy@pos,w
  3047     068B  3E80               	addlw	128
  3048     068C  00F7               	movwf	i1LCD_String_xy@location
  3049     068D                     i1l1364:
  3050                           
  3051                           ;main.c: 130:             LCD_Command(location);
  3052     068D  0877               	movf	i1LCD_String_xy@location,w
  3053     068E  120A  118A  2428  120A  118A  	fcall	i1_LCD_Command
  3054                           
  3055                           ;main.c: 131:             break;
  3056     0693  2EC0               	goto	i1l1382
  3057     0694                     i1l1366:
  3058                           
  3059                           ;main.c: 133:             location=(unsigned char)((0xC0) + (pos));
  3060     0694  0874               	movf	i1LCD_String_xy@pos,w
  3061     0695  3EC0               	addlw	192
  3062     0696  00F7               	movwf	i1LCD_String_xy@location
  3063     0697                     i1l1368:
  3064                           
  3065                           ;main.c: 134:             LCD_Command(location);
  3066     0697  0877               	movf	i1LCD_String_xy@location,w
  3067     0698  120A  118A  2428  120A  118A  	fcall	i1_LCD_Command
  3068                           
  3069                           ;main.c: 135:             break;
  3070     069D  2EC0               	goto	i1l1382
  3071     069E                     i1l1370:
  3072                           
  3073                           ;main.c: 137:             location=(unsigned char)((0x94) + (pos));
  3074     069E  0874               	movf	i1LCD_String_xy@pos,w
  3075     069F  3E94               	addlw	148
  3076     06A0  00F7               	movwf	i1LCD_String_xy@location
  3077     06A1                     i1l1372:
  3078                           
  3079                           ;main.c: 138:             LCD_Command(location);
  3080     06A1  0877               	movf	i1LCD_String_xy@location,w
  3081     06A2  120A  118A  2428  120A  118A  	fcall	i1_LCD_Command
  3082                           
  3083                           ;main.c: 139:             break;
  3084     06A7  2EC0               	goto	i1l1382
  3085     06A8                     i1l1374:
  3086                           
  3087                           ;main.c: 141:             location=(unsigned char)((0xD4) + (pos));
  3088     06A8  0874               	movf	i1LCD_String_xy@pos,w
  3089     06A9  3ED4               	addlw	212
  3090     06AA  00F7               	movwf	i1LCD_String_xy@location
  3091     06AB                     i1l1376:
  3092                           
  3093                           ;main.c: 142:             LCD_Command(location);
  3094     06AB  0877               	movf	i1LCD_String_xy@location,w
  3095     06AC  120A  118A  2428  120A  118A  	fcall	i1_LCD_Command
  3096                           
  3097                           ;main.c: 143:             break;
  3098     06B1  2EC0               	goto	i1l1382
  3099     06B2                     i1l1380:
  3100     06B2  0876               	movf	i1LCD_String_xy@row,w
  3101                           
  3102                           ; Switch size 1, requested type "simple"
  3103                           ; Number of cases is 4, Range of values is 0 to 3
  3104                           ; switch strategies available:
  3105                           ; Name         Instructions Cycles
  3106                           ; simple_byte           13     7 (average)
  3107                           ; direct_byte           20     8 (fixed)
  3108                           ; jumptable            260     6 (fixed)
  3109                           ;	Chosen strategy is simple_byte
  3110     06B3  3A00               	xorlw	0	; case 0
  3111     06B4  1903               	skipnz
  3112     06B5  2E8A               	goto	i1l1362
  3113     06B6  3A01               	xorlw	1	; case 1
  3114     06B7  1903               	skipnz
  3115     06B8  2E94               	goto	i1l1366
  3116     06B9  3A03               	xorlw	3	; case 2
  3117     06BA  1903               	skipnz
  3118     06BB  2E9E               	goto	i1l1370
  3119     06BC  3A01               	xorlw	1	; case 3
  3120     06BD  1903               	skipnz
  3121     06BE  2EA8               	goto	i1l1374
  3122     06BF  2EC0               	goto	i1l1382
  3123     06C0                     i1l1382:
  3124                           
  3125                           ;main.c: 146:     LCD_String(msg);
  3126     06C0  0875               	movf	i1LCD_String_xy@msg,w
  3127     06C1  120A  118A  273F  120A  118A  	fcall	i1_LCD_String
  3128     06C6                     i1l91:
  3129     06C6  0008               	return
  3130     06C7                     __end_ofi1_LCD_String_xy:
  3131                           
  3132                           	psect	text14
  3133     073F                     __ptext14:	
  3134 ;; *************** function i1_LCD_String *****************
  3135 ;; Defined at:
  3136 ;;		line 117 in file "main.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  msg             1    wreg     PTR const unsigned char 
  3139 ;;		 -> STR_20(13), STR_19(4), STR_18(12), STR_17(4), 
  3140 ;;		 -> STR_16(12), STR_15(4), STR_14(12), STR_13(4), 
  3141 ;;		 -> STR_12(12), STR_11(2), STR_10(2), STR_9(2), 
  3142 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  3143 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(8), 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  msg             1    3[COMMON] PTR const unsigned char 
  3146 ;;		 -> STR_20(13), STR_19(4), STR_18(12), STR_17(4), 
  3147 ;;		 -> STR_16(12), STR_15(4), STR_14(12), STR_13(4), 
  3148 ;;		 -> STR_12(12), STR_11(2), STR_10(2), STR_9(2), 
  3149 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  3150 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(8), 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       0       0       0       0
  3161 ;;      Locals:         1       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0
  3163 ;;      Totals:         1       0       0       0       0
  3164 ;;Total ram usage:        1 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 1
  3167 ;; This function calls:
  3168 ;;		i1_LCD_Char
  3169 ;; This function is called by:
  3170 ;;		i1_LCD_String_xy
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174     073F                     i1_LCD_String:	
  3175                           ;psect for function i1_LCD_String
  3176                           
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in i1_LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3180                           ;i1LCD_String@msg stored from wreg
  3181     073F  00F3               	movwf	i1LCD_String@msg
  3182     0740                     i1l1300:
  3183                           
  3184                           ;main.c: 118:  while((*msg)!=0)
  3185     0740  2F51               	goto	i1l1306
  3186     0741                     i1l1302:
  3187                           
  3188                           ;main.c: 119:  {;main.c: 120:         LCD_Char(*msg);
  3189     0741  0873               	movf	i1LCD_String@msg,w
  3190     0742  0084               	movwf	4
  3191     0743  120A  118A  2500  120A  118A  	fcall	stringdir
  3192     0748  120A  118A  2383  120A  118A  	fcall	i1_LCD_Char
  3193     074D                     i1l1304:
  3194                           
  3195                           ;main.c: 121:         msg++;
  3196     074D  3001               	movlw	1
  3197     074E  00FF               	movwf	btemp+1
  3198     074F  087F               	movf	btemp+1,w
  3199     0750  07F3               	addwf	i1LCD_String@msg,f
  3200     0751                     i1l1306:
  3201                           
  3202                           ;main.c: 118:  while((*msg)!=0)
  3203     0751  0873               	movf	i1LCD_String@msg,w
  3204     0752  0084               	movwf	4
  3205     0753  120A  118A  2500  120A  118A  	fcall	stringdir
  3206     0758  3A00               	xorlw	0
  3207     0759  1D03               	skipz
  3208     075A  2F5C               	goto	u87_21
  3209     075B  2F5D               	goto	u87_20
  3210     075C                     u87_21:
  3211     075C  2F41               	goto	i1l1302
  3212     075D                     u87_20:
  3213     075D                     i1l82:
  3214     075D  0008               	return
  3215     075E                     __end_ofi1_LCD_String:
  3216                           
  3217                           	psect	text15
  3218     0383                     __ptext15:	
  3219 ;; *************** function i1_LCD_Char *****************
  3220 ;; Defined at:
  3221 ;;		line 70 in file "main.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  dat             1    wreg     unsigned char 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  dat             1    2[COMMON] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       0       0       0       0
  3236 ;;      Locals:         1       0       0       0       0
  3237 ;;      Temps:          2       0       0       0       0
  3238 ;;      Totals:         3       0       0       0       0
  3239 ;;Total ram usage:        3 bytes
  3240 ;; Hardware stack levels used: 1
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		i1_LCD_String
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248     0383                     i1_LCD_Char:	
  3249                           ;psect for function i1_LCD_Char
  3250                           
  3251                           
  3252                           ;incstack = 0
  3253                           ; Regs used in i1_LCD_Char: [wreg+status,2+status,0]
  3254                           ;i1LCD_Char@dat stored from wreg
  3255     0383  00F2               	movwf	i1LCD_Char@dat
  3256     0384                     i1l1216:
  3257                           
  3258                           ;main.c: 72:     PORTDbits.RD4 = (dat >> 4) & 0x01;
  3259     0384  0872               	movf	i1LCD_Char@dat,w
  3260     0385  00F0               	movwf	??i1_LCD_Char
  3261     0386  3004               	movlw	4
  3262     0387                     u69_25:
  3263     0387  1003               	clrc
  3264     0388  0CF0               	rrf	??i1_LCD_Char,f
  3265     0389  3EFF               	addlw	-1
  3266     038A  1D03               	skipz
  3267     038B  2B87               	goto	u69_25
  3268     038C  0870               	movf	??i1_LCD_Char,w
  3269     038D  3901               	andlw	1
  3270     038E  00F1               	movwf	??i1_LCD_Char+1
  3271     038F  0EF1               	swapf	??i1_LCD_Char+1,f
  3272     0390  1283               	bcf	3,5	;RP0=0, select bank0
  3273     0391  1303               	bcf	3,6	;RP1=0, select bank0
  3274     0392  0808               	movf	8,w	;volatile
  3275     0393  0671               	xorwf	??i1_LCD_Char+1,w
  3276     0394  39EF               	andlw	-17
  3277     0395  0671               	xorwf	??i1_LCD_Char+1,w
  3278     0396  0088               	movwf	8	;volatile
  3279                           
  3280                           ;main.c: 73:     PORTDbits.RD5 = (dat >> 5) & 0x01;
  3281     0397  0872               	movf	i1LCD_Char@dat,w
  3282     0398  00F0               	movwf	??i1_LCD_Char
  3283     0399  3005               	movlw	5
  3284     039A                     u70_25:
  3285     039A  1003               	clrc
  3286     039B  0CF0               	rrf	??i1_LCD_Char,f
  3287     039C  3EFF               	addlw	-1
  3288     039D  1D03               	skipz
  3289     039E  2B9A               	goto	u70_25
  3290     039F  0870               	movf	??i1_LCD_Char,w
  3291     03A0  3901               	andlw	1
  3292     03A1  00F1               	movwf	??i1_LCD_Char+1
  3293     03A2  0EF1               	swapf	??i1_LCD_Char+1,f
  3294     03A3  0DF1               	rlf	??i1_LCD_Char+1,f
  3295     03A4  0808               	movf	8,w	;volatile
  3296     03A5  0671               	xorwf	??i1_LCD_Char+1,w
  3297     03A6  39DF               	andlw	-33
  3298     03A7  0671               	xorwf	??i1_LCD_Char+1,w
  3299     03A8  0088               	movwf	8	;volatile
  3300                           
  3301                           ;main.c: 74:     PORTDbits.RD6 = (dat >> 6) & 0x01;
  3302     03A9  0872               	movf	i1LCD_Char@dat,w
  3303     03AA  00F0               	movwf	??i1_LCD_Char
  3304     03AB  3006               	movlw	6
  3305     03AC                     u71_25:
  3306     03AC  1003               	clrc
  3307     03AD  0CF0               	rrf	??i1_LCD_Char,f
  3308     03AE  3EFF               	addlw	-1
  3309     03AF  1D03               	skipz
  3310     03B0  2BAC               	goto	u71_25
  3311     03B1  0870               	movf	??i1_LCD_Char,w
  3312     03B2  3901               	andlw	1
  3313     03B3  00F1               	movwf	??i1_LCD_Char+1
  3314     03B4  0EF1               	swapf	??i1_LCD_Char+1,f
  3315     03B5  0DF1               	rlf	??i1_LCD_Char+1,f
  3316     03B6  0DF1               	rlf	??i1_LCD_Char+1,f
  3317     03B7  0808               	movf	8,w	;volatile
  3318     03B8  0671               	xorwf	??i1_LCD_Char+1,w
  3319     03B9  39BF               	andlw	-65
  3320     03BA  0671               	xorwf	??i1_LCD_Char+1,w
  3321     03BB  0088               	movwf	8	;volatile
  3322                           
  3323                           ;main.c: 75:     PORTDbits.RD7 = (dat >> 7) & 0x01;
  3324     03BC  0872               	movf	i1LCD_Char@dat,w
  3325     03BD  00F0               	movwf	??i1_LCD_Char
  3326     03BE  3007               	movlw	7
  3327     03BF                     u72_25:
  3328     03BF  1003               	clrc
  3329     03C0  0CF0               	rrf	??i1_LCD_Char,f
  3330     03C1  3EFF               	addlw	-1
  3331     03C2  1D03               	skipz
  3332     03C3  2BBF               	goto	u72_25
  3333     03C4  0870               	movf	??i1_LCD_Char,w
  3334     03C5  3901               	andlw	1
  3335     03C6  00F1               	movwf	??i1_LCD_Char+1
  3336     03C7  0CF1               	rrf	??i1_LCD_Char+1,f
  3337     03C8  0CF1               	rrf	??i1_LCD_Char+1,f
  3338     03C9  0808               	movf	8,w	;volatile
  3339     03CA  0671               	xorwf	??i1_LCD_Char+1,w
  3340     03CB  397F               	andlw	-129
  3341     03CC  0671               	xorwf	??i1_LCD_Char+1,w
  3342     03CD  0088               	movwf	8	;volatile
  3343     03CE                     i1l1218:
  3344                           
  3345                           ;main.c: 77:  PORTDbits.RD0 = 1;
  3346     03CE  1408               	bsf	8,0	;volatile
  3347     03CF                     i1l1220:
  3348                           
  3349                           ;main.c: 78:  PORTDbits.RD1 = 1;
  3350     03CF  1488               	bsf	8,1	;volatile
  3351     03D0                     i1l1222:
  3352                           
  3353                           ;main.c: 79:  __nop();
  3354     03D0  0000               	nop
  3355     03D1                     i1l1224:
  3356                           
  3357                           ;main.c: 80:  PORTDbits.RD1 = 0;
  3358     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3359     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3360     03D3  1088               	bcf	8,1	;volatile
  3361     03D4                     i1l1226:
  3362                           
  3363                           ;main.c: 81:  _delay((unsigned long)((1)*(20000000/4000.0)));
  3364     03D4  3007               	movlw	7
  3365     03D5  00F1               	movwf	??i1_LCD_Char+1
  3366     03D6  307D               	movlw	125
  3367     03D7  00F0               	movwf	??i1_LCD_Char
  3368     03D8                     u145_27:
  3369     03D8  0BF0               	decfsz	??i1_LCD_Char,f
  3370     03D9  2BD8               	goto	u145_27
  3371     03DA  0BF1               	decfsz	??i1_LCD_Char+1,f
  3372     03DB  2BD8               	goto	u145_27
  3373     03DC                     i1l1228:
  3374                           
  3375                           ;main.c: 83:     PORTDbits.RD4 = (dat >> 0) & 0x01;
  3376     03DC  0872               	movf	i1LCD_Char@dat,w
  3377     03DD  3901               	andlw	1
  3378     03DE  00F0               	movwf	??i1_LCD_Char
  3379     03DF  0EF0               	swapf	??i1_LCD_Char,f
  3380     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3381     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  3382     03E2  0808               	movf	8,w	;volatile
  3383     03E3  0670               	xorwf	??i1_LCD_Char,w
  3384     03E4  39EF               	andlw	-17
  3385     03E5  0670               	xorwf	??i1_LCD_Char,w
  3386     03E6  0088               	movwf	8	;volatile
  3387     03E7                     i1l1230:
  3388                           
  3389                           ;main.c: 84:     PORTDbits.RD5 = (dat >> 1) & 0x01;
  3390     03E7  0872               	movf	i1LCD_Char@dat,w
  3391     03E8  00F0               	movwf	??i1_LCD_Char
  3392     03E9  1003               	clrc
  3393     03EA  0C70               	rrf	??i1_LCD_Char,w
  3394     03EB  3901               	andlw	1
  3395     03EC  00F1               	movwf	??i1_LCD_Char+1
  3396     03ED  0EF1               	swapf	??i1_LCD_Char+1,f
  3397     03EE  0DF1               	rlf	??i1_LCD_Char+1,f
  3398     03EF  0808               	movf	8,w	;volatile
  3399     03F0  0671               	xorwf	??i1_LCD_Char+1,w
  3400     03F1  39DF               	andlw	-33
  3401     03F2  0671               	xorwf	??i1_LCD_Char+1,w
  3402     03F3  0088               	movwf	8	;volatile
  3403     03F4                     i1l1232:
  3404                           
  3405                           ;main.c: 85:     PORTDbits.RD6 = (dat >> 2) & 0x01;
  3406     03F4  0872               	movf	i1LCD_Char@dat,w
  3407     03F5  00F0               	movwf	??i1_LCD_Char
  3408     03F6  3002               	movlw	2
  3409     03F7                     u73_25:
  3410     03F7  1003               	clrc
  3411     03F8  0CF0               	rrf	??i1_LCD_Char,f
  3412     03F9  3EFF               	addlw	-1
  3413     03FA  1D03               	skipz
  3414     03FB  2BF7               	goto	u73_25
  3415     03FC  0870               	movf	??i1_LCD_Char,w
  3416     03FD  3901               	andlw	1
  3417     03FE  00F1               	movwf	??i1_LCD_Char+1
  3418     03FF  0EF1               	swapf	??i1_LCD_Char+1,f
  3419     0400  0DF1               	rlf	??i1_LCD_Char+1,f
  3420     0401  0DF1               	rlf	??i1_LCD_Char+1,f
  3421     0402  0808               	movf	8,w	;volatile
  3422     0403  0671               	xorwf	??i1_LCD_Char+1,w
  3423     0404  39BF               	andlw	-65
  3424     0405  0671               	xorwf	??i1_LCD_Char+1,w
  3425     0406  0088               	movwf	8	;volatile
  3426     0407                     i1l1234:
  3427                           
  3428                           ;main.c: 86:     PORTDbits.RD7 = (dat >> 3) & 0x01;
  3429     0407  0872               	movf	i1LCD_Char@dat,w
  3430     0408  00F0               	movwf	??i1_LCD_Char
  3431     0409  3003               	movlw	3
  3432     040A                     u74_25:
  3433     040A  1003               	clrc
  3434     040B  0CF0               	rrf	??i1_LCD_Char,f
  3435     040C  3EFF               	addlw	-1
  3436     040D  1D03               	skipz
  3437     040E  2C0A               	goto	u74_25
  3438     040F  0870               	movf	??i1_LCD_Char,w
  3439     0410  3901               	andlw	1
  3440     0411  00F1               	movwf	??i1_LCD_Char+1
  3441     0412  0CF1               	rrf	??i1_LCD_Char+1,f
  3442     0413  0CF1               	rrf	??i1_LCD_Char+1,f
  3443     0414  0808               	movf	8,w	;volatile
  3444     0415  0671               	xorwf	??i1_LCD_Char+1,w
  3445     0416  397F               	andlw	-129
  3446     0417  0671               	xorwf	??i1_LCD_Char+1,w
  3447     0418  0088               	movwf	8	;volatile
  3448     0419                     i1l1236:
  3449                           
  3450                           ;main.c: 87:  PORTDbits.RD1 = 1;
  3451     0419  1488               	bsf	8,1	;volatile
  3452     041A                     i1l1238:
  3453                           
  3454                           ;main.c: 88:  __nop();
  3455     041A  0000               	nop
  3456     041B                     i1l1240:
  3457                           
  3458                           ;main.c: 89:  PORTDbits.RD1 = 0;
  3459     041B  1283               	bcf	3,5	;RP0=0, select bank0
  3460     041C  1303               	bcf	3,6	;RP1=0, select bank0
  3461     041D  1088               	bcf	8,1	;volatile
  3462     041E                     i1l1242:
  3463                           
  3464                           ;main.c: 90:  _delay((unsigned long)((3)*(20000000/4000.0)));
  3465     041E  3014               	movlw	20
  3466     041F  00F1               	movwf	??i1_LCD_Char+1
  3467     0420  3079               	movlw	121
  3468     0421  00F0               	movwf	??i1_LCD_Char
  3469     0422                     u146_27:
  3470     0422  0BF0               	decfsz	??i1_LCD_Char,f
  3471     0423  2C22               	goto	u146_27
  3472     0424  0BF1               	decfsz	??i1_LCD_Char+1,f
  3473     0425  2C22               	goto	u146_27
  3474     0426  2C27               	nop2
  3475     0427                     i1l67:
  3476     0427  0008               	return
  3477     0428                     __end_ofi1_LCD_Char:
  3478                           
  3479                           	psect	text16
  3480     07B2                     __ptext16:	
  3481 ;; *************** function i1_LCD_Clear *****************
  3482 ;; Defined at:
  3483 ;;		line 149 in file "main.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, pclath, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0
  3499 ;;      Temps:          2       0       0       0       0
  3500 ;;      Totals:         2       0       0       0       0
  3501 ;;Total ram usage:        2 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; Hardware stack levels required when called: 1
  3504 ;; This function calls:
  3505 ;;		i1_LCD_Command
  3506 ;; This function is called by:
  3507 ;;		_Manual_Limpa
  3508 ;;		_teclado
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512     07B2                     i1_LCD_Clear:	
  3513                           ;psect for function i1_LCD_Clear
  3514                           
  3515     07B2                     i1l1384:	
  3516                           ;incstack = 0
  3517                           ; Regs used in i1_LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3518                           
  3519                           
  3520                           ;main.c: 150:     LCD_Command(0x01);
  3521     07B2  3001               	movlw	1
  3522     07B3  120A  118A  2428  120A  118A  	fcall	i1_LCD_Command
  3523     07B8                     i1l1386:
  3524                           
  3525                           ;main.c: 151:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3526     07B8  3014               	movlw	20
  3527     07B9  00F4               	movwf	??i1_LCD_Clear+1
  3528     07BA  3079               	movlw	121
  3529     07BB  00F3               	movwf	??i1_LCD_Clear
  3530     07BC                     u147_27:
  3531     07BC  0BF3               	decfsz	??i1_LCD_Clear,f
  3532     07BD  2FBC               	goto	u147_27
  3533     07BE  0BF4               	decfsz	??i1_LCD_Clear+1,f
  3534     07BF  2FBC               	goto	u147_27
  3535     07C0  2FC1               	nop2
  3536     07C1                     i1l94:
  3537     07C1  0008               	return
  3538     07C2                     __end_ofi1_LCD_Clear:
  3539                           
  3540                           	psect	text17
  3541     0428                     __ptext17:	
  3542 ;; *************** function i1_LCD_Command *****************
  3543 ;; Defined at:
  3544 ;;		line 37 in file "main.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  cmd             1    wreg     unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  cmd             1    2[COMMON] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3558 ;;      Params:         0       0       0       0       0
  3559 ;;      Locals:         1       0       0       0       0
  3560 ;;      Temps:          2       0       0       0       0
  3561 ;;      Totals:         3       0       0       0       0
  3562 ;;Total ram usage:        3 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		i1_LCD_String_xy
  3568 ;;		i1_LCD_Clear
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572     0428                     i1_LCD_Command:	
  3573                           ;psect for function i1_LCD_Command
  3574                           
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in i1_LCD_Command: [wreg+status,2+status,0]
  3578                           ;i1LCD_Command@cmd stored from wreg
  3579     0428  00F2               	movwf	i1LCD_Command@cmd
  3580     0429                     i1l1272:
  3581                           
  3582                           ;main.c: 39:     PORTDbits.RD4 = (cmd >> 4) & 0x01;
  3583     0429  0872               	movf	i1LCD_Command@cmd,w
  3584     042A  00F0               	movwf	??i1_LCD_Command
  3585     042B  3004               	movlw	4
  3586     042C                     u81_25:
  3587     042C  1003               	clrc
  3588     042D  0CF0               	rrf	??i1_LCD_Command,f
  3589     042E  3EFF               	addlw	-1
  3590     042F  1D03               	skipz
  3591     0430  2C2C               	goto	u81_25
  3592     0431  0870               	movf	??i1_LCD_Command,w
  3593     0432  3901               	andlw	1
  3594     0433  00F1               	movwf	??i1_LCD_Command+1
  3595     0434  0EF1               	swapf	??i1_LCD_Command+1,f
  3596     0435  1283               	bcf	3,5	;RP0=0, select bank0
  3597     0436  1303               	bcf	3,6	;RP1=0, select bank0
  3598     0437  0808               	movf	8,w	;volatile
  3599     0438  0671               	xorwf	??i1_LCD_Command+1,w
  3600     0439  39EF               	andlw	-17
  3601     043A  0671               	xorwf	??i1_LCD_Command+1,w
  3602     043B  0088               	movwf	8	;volatile
  3603                           
  3604                           ;main.c: 40:     PORTDbits.RD5 = (cmd >> 5) & 0x01;
  3605     043C  0872               	movf	i1LCD_Command@cmd,w
  3606     043D  00F0               	movwf	??i1_LCD_Command
  3607     043E  3005               	movlw	5
  3608     043F                     u82_25:
  3609     043F  1003               	clrc
  3610     0440  0CF0               	rrf	??i1_LCD_Command,f
  3611     0441  3EFF               	addlw	-1
  3612     0442  1D03               	skipz
  3613     0443  2C3F               	goto	u82_25
  3614     0444  0870               	movf	??i1_LCD_Command,w
  3615     0445  3901               	andlw	1
  3616     0446  00F1               	movwf	??i1_LCD_Command+1
  3617     0447  0EF1               	swapf	??i1_LCD_Command+1,f
  3618     0448  0DF1               	rlf	??i1_LCD_Command+1,f
  3619     0449  0808               	movf	8,w	;volatile
  3620     044A  0671               	xorwf	??i1_LCD_Command+1,w
  3621     044B  39DF               	andlw	-33
  3622     044C  0671               	xorwf	??i1_LCD_Command+1,w
  3623     044D  0088               	movwf	8	;volatile
  3624                           
  3625                           ;main.c: 41:     PORTDbits.RD6 = (cmd >> 6) & 0x01;
  3626     044E  0872               	movf	i1LCD_Command@cmd,w
  3627     044F  00F0               	movwf	??i1_LCD_Command
  3628     0450  3006               	movlw	6
  3629     0451                     u83_25:
  3630     0451  1003               	clrc
  3631     0452  0CF0               	rrf	??i1_LCD_Command,f
  3632     0453  3EFF               	addlw	-1
  3633     0454  1D03               	skipz
  3634     0455  2C51               	goto	u83_25
  3635     0456  0870               	movf	??i1_LCD_Command,w
  3636     0457  3901               	andlw	1
  3637     0458  00F1               	movwf	??i1_LCD_Command+1
  3638     0459  0EF1               	swapf	??i1_LCD_Command+1,f
  3639     045A  0DF1               	rlf	??i1_LCD_Command+1,f
  3640     045B  0DF1               	rlf	??i1_LCD_Command+1,f
  3641     045C  0808               	movf	8,w	;volatile
  3642     045D  0671               	xorwf	??i1_LCD_Command+1,w
  3643     045E  39BF               	andlw	-65
  3644     045F  0671               	xorwf	??i1_LCD_Command+1,w
  3645     0460  0088               	movwf	8	;volatile
  3646                           
  3647                           ;main.c: 42:     PORTDbits.RD7 = (cmd >> 7) & 0x01;
  3648     0461  0872               	movf	i1LCD_Command@cmd,w
  3649     0462  00F0               	movwf	??i1_LCD_Command
  3650     0463  3007               	movlw	7
  3651     0464                     u84_25:
  3652     0464  1003               	clrc
  3653     0465  0CF0               	rrf	??i1_LCD_Command,f
  3654     0466  3EFF               	addlw	-1
  3655     0467  1D03               	skipz
  3656     0468  2C64               	goto	u84_25
  3657     0469  0870               	movf	??i1_LCD_Command,w
  3658     046A  3901               	andlw	1
  3659     046B  00F1               	movwf	??i1_LCD_Command+1
  3660     046C  0CF1               	rrf	??i1_LCD_Command+1,f
  3661     046D  0CF1               	rrf	??i1_LCD_Command+1,f
  3662     046E  0808               	movf	8,w	;volatile
  3663     046F  0671               	xorwf	??i1_LCD_Command+1,w
  3664     0470  397F               	andlw	-129
  3665     0471  0671               	xorwf	??i1_LCD_Command+1,w
  3666     0472  0088               	movwf	8	;volatile
  3667     0473                     i1l1274:
  3668                           
  3669                           ;main.c: 43:  PORTDbits.RD0 = 0;
  3670     0473  1008               	bcf	8,0	;volatile
  3671     0474                     i1l1276:
  3672                           
  3673                           ;main.c: 44:  PORTDbits.RD1 = 1;
  3674     0474  1488               	bsf	8,1	;volatile
  3675     0475                     i1l1278:
  3676                           
  3677                           ;main.c: 45:  __nop();
  3678     0475  0000               	nop
  3679     0476                     i1l1280:
  3680                           
  3681                           ;main.c: 46:  PORTDbits.RD1 = 0;
  3682     0476  1283               	bcf	3,5	;RP0=0, select bank0
  3683     0477  1303               	bcf	3,6	;RP1=0, select bank0
  3684     0478  1088               	bcf	8,1	;volatile
  3685     0479                     i1l1282:
  3686                           
  3687                           ;main.c: 47:  _delay((unsigned long)((1)*(20000000/4000.0)));
  3688     0479  3007               	movlw	7
  3689     047A  00F1               	movwf	??i1_LCD_Command+1
  3690     047B  307D               	movlw	125
  3691     047C  00F0               	movwf	??i1_LCD_Command
  3692     047D                     u148_27:
  3693     047D  0BF0               	decfsz	??i1_LCD_Command,f
  3694     047E  2C7D               	goto	u148_27
  3695     047F  0BF1               	decfsz	??i1_LCD_Command+1,f
  3696     0480  2C7D               	goto	u148_27
  3697     0481                     i1l1284:
  3698                           
  3699                           ;main.c: 49:     PORTDbits.RD4 = (cmd >> 0) & 0x01;
  3700     0481  0872               	movf	i1LCD_Command@cmd,w
  3701     0482  3901               	andlw	1
  3702     0483  00F0               	movwf	??i1_LCD_Command
  3703     0484  0EF0               	swapf	??i1_LCD_Command,f
  3704     0485  1283               	bcf	3,5	;RP0=0, select bank0
  3705     0486  1303               	bcf	3,6	;RP1=0, select bank0
  3706     0487  0808               	movf	8,w	;volatile
  3707     0488  0670               	xorwf	??i1_LCD_Command,w
  3708     0489  39EF               	andlw	-17
  3709     048A  0670               	xorwf	??i1_LCD_Command,w
  3710     048B  0088               	movwf	8	;volatile
  3711     048C                     i1l1286:
  3712                           
  3713                           ;main.c: 50:     PORTDbits.RD5 = (cmd >> 1) & 0x01;
  3714     048C  0872               	movf	i1LCD_Command@cmd,w
  3715     048D  00F0               	movwf	??i1_LCD_Command
  3716     048E  1003               	clrc
  3717     048F  0C70               	rrf	??i1_LCD_Command,w
  3718     0490  3901               	andlw	1
  3719     0491  00F1               	movwf	??i1_LCD_Command+1
  3720     0492  0EF1               	swapf	??i1_LCD_Command+1,f
  3721     0493  0DF1               	rlf	??i1_LCD_Command+1,f
  3722     0494  0808               	movf	8,w	;volatile
  3723     0495  0671               	xorwf	??i1_LCD_Command+1,w
  3724     0496  39DF               	andlw	-33
  3725     0497  0671               	xorwf	??i1_LCD_Command+1,w
  3726     0498  0088               	movwf	8	;volatile
  3727     0499                     i1l1288:
  3728                           
  3729                           ;main.c: 51:     PORTDbits.RD6 = (cmd >> 2) & 0x01;
  3730     0499  0872               	movf	i1LCD_Command@cmd,w
  3731     049A  00F0               	movwf	??i1_LCD_Command
  3732     049B  3002               	movlw	2
  3733     049C                     u85_25:
  3734     049C  1003               	clrc
  3735     049D  0CF0               	rrf	??i1_LCD_Command,f
  3736     049E  3EFF               	addlw	-1
  3737     049F  1D03               	skipz
  3738     04A0  2C9C               	goto	u85_25
  3739     04A1  0870               	movf	??i1_LCD_Command,w
  3740     04A2  3901               	andlw	1
  3741     04A3  00F1               	movwf	??i1_LCD_Command+1
  3742     04A4  0EF1               	swapf	??i1_LCD_Command+1,f
  3743     04A5  0DF1               	rlf	??i1_LCD_Command+1,f
  3744     04A6  0DF1               	rlf	??i1_LCD_Command+1,f
  3745     04A7  0808               	movf	8,w	;volatile
  3746     04A8  0671               	xorwf	??i1_LCD_Command+1,w
  3747     04A9  39BF               	andlw	-65
  3748     04AA  0671               	xorwf	??i1_LCD_Command+1,w
  3749     04AB  0088               	movwf	8	;volatile
  3750     04AC                     i1l1290:
  3751                           
  3752                           ;main.c: 52:     PORTDbits.RD7 = (cmd >> 3) & 0x01;
  3753     04AC  0872               	movf	i1LCD_Command@cmd,w
  3754     04AD  00F0               	movwf	??i1_LCD_Command
  3755     04AE  3003               	movlw	3
  3756     04AF                     u86_25:
  3757     04AF  1003               	clrc
  3758     04B0  0CF0               	rrf	??i1_LCD_Command,f
  3759     04B1  3EFF               	addlw	-1
  3760     04B2  1D03               	skipz
  3761     04B3  2CAF               	goto	u86_25
  3762     04B4  0870               	movf	??i1_LCD_Command,w
  3763     04B5  3901               	andlw	1
  3764     04B6  00F1               	movwf	??i1_LCD_Command+1
  3765     04B7  0CF1               	rrf	??i1_LCD_Command+1,f
  3766     04B8  0CF1               	rrf	??i1_LCD_Command+1,f
  3767     04B9  0808               	movf	8,w	;volatile
  3768     04BA  0671               	xorwf	??i1_LCD_Command+1,w
  3769     04BB  397F               	andlw	-129
  3770     04BC  0671               	xorwf	??i1_LCD_Command+1,w
  3771     04BD  0088               	movwf	8	;volatile
  3772     04BE                     i1l1292:
  3773                           
  3774                           ;main.c: 53:  PORTDbits.RD1 = 1;
  3775     04BE  1488               	bsf	8,1	;volatile
  3776     04BF                     i1l1294:
  3777                           
  3778                           ;main.c: 54:  __nop();
  3779     04BF  0000               	nop
  3780     04C0                     i1l1296:
  3781                           
  3782                           ;main.c: 55:  PORTDbits.RD1 = 0;
  3783     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3784     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3785     04C2  1088               	bcf	8,1	;volatile
  3786     04C3                     i1l1298:
  3787                           
  3788                           ;main.c: 56:  _delay((unsigned long)((3)*(20000000/4000.0)));
  3789     04C3  3014               	movlw	20
  3790     04C4  00F1               	movwf	??i1_LCD_Command+1
  3791     04C5  3079               	movlw	121
  3792     04C6  00F0               	movwf	??i1_LCD_Command
  3793     04C7                     u149_27:
  3794     04C7  0BF0               	decfsz	??i1_LCD_Command,f
  3795     04C8  2CC7               	goto	u149_27
  3796     04C9  0BF1               	decfsz	??i1_LCD_Command+1,f
  3797     04CA  2CC7               	goto	u149_27
  3798     04CB  2CCC               	nop2
  3799     04CC                     i1l61:
  3800     04CC  0008               	return
  3801     04CD                     __end_ofi1_LCD_Command:
  3802     007E                     btemp	set	126	;btemp
  3803     007E                     wtemp0	set	126
  3804                           
  3805                           	psect	idloc
  3806                           
  3807                           ;Config register IDLOC0 @ 0x2000
  3808                           ;	unspecified, using default values
  3809     2000                     	org	8192
  3810     2000  3FFF               	dw	16383
  3811                           
  3812                           ;Config register IDLOC1 @ 0x2001
  3813                           ;	unspecified, using default values
  3814     2001                     	org	8193
  3815     2001  3FFF               	dw	16383
  3816                           
  3817                           ;Config register IDLOC2 @ 0x2002
  3818                           ;	unspecified, using default values
  3819     2002                     	org	8194
  3820     2002  3FFF               	dw	16383
  3821                           
  3822                           ;Config register IDLOC3 @ 0x2003
  3823                           ;	unspecified, using default values
  3824     2003                     	org	8195
  3825     2003  3FFF               	dw	16383
  3826                           
  3827                           	psect	config
  3828                           
  3829                           ;Config register CONFIG @ 0x2007
  3830                           ;	Oscillator Selection bits
  3831                           ;	FOSC = HS, HS oscillator
  3832                           ;	Watchdog Timer Enable bit
  3833                           ;	WDTE = OFF, WDT disabled
  3834                           ;	Power-up Timer Enable bit
  3835                           ;	PWRTE = OFF, PWRT disabled
  3836                           ;	Brown-out Reset Enable bit
  3837                           ;	BOREN = OFF, BOR disabled
  3838                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3839                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3840                           ;	Data EEPROM Memory Code Protection bit
  3841                           ;	CPD = OFF, Data EEPROM code protection off
  3842                           ;	Flash Program Memory Write Enable bits
  3843                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3844                           ;	In-Circuit Debugger Mode bit
  3845                           ;	DEBUG = 0x1, unprogrammed default
  3846                           ;	Flash Program Memory Code Protection bit
  3847                           ;	CP = OFF, Code protection off
  3848     2007                     	org	8199
  3849     2007  3F3A               	dw	16186

Data Sizes:
    Strings     105
    Constant    0
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     23      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[8]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[12]), 
		 -> STR_13(CODE[4]), STR_14(CODE[12]), STR_15(CODE[4]), STR_16(CODE[12]), 
		 -> STR_17(CODE[4]), STR_18(CODE[12]), STR_19(CODE[4]), STR_2(CODE[2]), 
		 -> STR_20(CODE[13]), STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 
		 -> STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[8]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[12]), 
		 -> STR_13(CODE[4]), STR_14(CODE[12]), STR_15(CODE[4]), STR_16(CODE[12]), 
		 -> STR_17(CODE[4]), STR_18(CODE[12]), STR_19(CODE[4]), STR_2(CODE[2]), 
		 -> STR_20(CODE[13]), STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 
		 -> STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _teclado in COMMON

    _teclado->i1_LCD_String_xy
    _Multiplicador->___bmul
    _Manual_Limpa->i1_LCD_String_xy
    i1_LCD_String_xy->i1_LCD_String
    i1_LCD_String->i1_LCD_Char
    i1_LCD_Clear->i1_LCD_Command

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _teclado in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _teclado in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _teclado in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _teclado in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3755
                                             21 BANK0      2     2      0
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              7 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2    2707
                                             11 BANK0      4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     1      0     254
                                             10 BANK0      1     1      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             3     3      0     176
                                              7 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     176
                                             10 BANK0      3     3      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0     176
                                             10 BANK0      2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0     176
                                              7 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _teclado                                              7     7      0    3784
                                              0 BANK0      7     7      0
                       _Manual_Limpa
                      _Multiplicador
                        i1_LCD_Clear
                    i1_LCD_String_xy
 ---------------------------------------------------------------------------------
 (5) _Multiplicador                                        1     1      0     212
                                              3 COMMON     1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               3     2      1     168
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _Manual_Limpa                                         0     0      0    1786
                        i1_LCD_Clear
                    i1_LCD_String_xy
 ---------------------------------------------------------------------------------
 (5) i1_LCD_String_xy                                      4     2      2    1610
                                              4 COMMON     4     2      2
                      i1_LCD_Command
                       i1_LCD_String
 ---------------------------------------------------------------------------------
 (6) i1_LCD_String                                         1     1      0     221
                                              3 COMMON     1     1      0
                         i1_LCD_Char
 ---------------------------------------------------------------------------------
 (7) i1_LCD_Char                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) i1_LCD_Clear                                          2     2      0     176
                                              3 COMMON     2     2      0
                      i1_LCD_Command
 ---------------------------------------------------------------------------------
 (6) i1_LCD_Command                                        3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   ___awdiv
     ___wmul (ARG)
   ___wmul

 _teclado (ROOT)
   _Manual_Limpa
     i1_LCD_Clear
       i1_LCD_Command
     i1_LCD_String_xy
       i1_LCD_Command
       i1_LCD_String
         i1_LCD_Char
   _Multiplicador
     ___bmul
   i1_LCD_Clear
   i1_LCD_String_xy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Mar 30 11:12:29 2024

                      _i 0078                        pc 0002           ___bmul@product 0071  
           ?_LCD_Command 0070                       l61 0382                       l64 06F4  
                     l82 073E                       l67 02D9                       l91 0687  
                     l94 07B1             ___awdiv@sign 0032                       fsr 0004  
    ___wmul@multiplicand 0029              ?_LCD_String 0070                      l240 0703  
                    l242 071B                      l393 0644                      _PR2 0092  
                    u805 02BB                      u905 0303                      u915 0316  
                    u755 0237                      u940 073E                      u925 0351  
                    u765 0248                      u941 073D                      u935 0364  
                    u775 025A                      u785 026D                      u795 02A8  
                    u980 06FD                      u885 02E0                      u981 06FC  
                    u895 02F1                      u995 0704                      fsr0 0004  
            LCD_Char@dat 0029              ?i1_LCD_Char 0070                     l1310 0325  
                   l1320 0336                     l1312 0326                     l1400 0648  
                   l1330 0374                     l1322 0341                     l1314 0327  
                   l1250 027E                     l1410 065D                     l1402 0649  
                   l1332 0375                     l1324 034E                     l1316 0328  
                   l1308 02DD                     l1260 02A5                     l1252 027F  
                   l1244 0234                     l1340 072C                     l1412 0660  
                   l1404 064C                     l1420 0671                     l1334 0378  
                   l1326 0361                     l1318 032B                     l1270 02CF  
                   l1262 02B8                     l1254 0282                     l1246 027C  
                   l1342 0732                     l1414 0667                     l1406 0653  
                   l1422 067F                     l1328 0373                     l1424 07A1  
                   l1264 02CA                     l1256 028D                     l1248 027D  
                   l1336 071F                     l1416 066A                     l1408 0656  
                   l1426 07A7                     l1266 02CB                     l1258 0298  
                   l1338 0720                     l1450 070A                     l1268 02CC  
                   l1460 05DF                     l1452 0711                     l1444 06F5  
                   l1700 057E                     l1390 06D6                     l1470 05F3  
                   l1462 05E3                     l1454 0717                     l1446 06F9  
                   l1710 058D                     l1702 057F                     l1392 06DC  
                   l1480 0609                     l1472 05F7                     l1464 05E8  
                   l1448 06FD                     l1720 059A                     l1712 0592  
                   l1704 0583                     l1394 06E2                     l1490 0629  
                   l1482 060D                     l1474 05F9                     l1466 05EA  
                   l1458 05DC                     l1730 05A7                     l1722 059B  
                   l1714 0593                     l1706 0587                     l1396 06E8  
                   l1388 06C7                     l1492 0630                     l1484 0611  
                   l1476 05FF                     l1468 05EE                     l1732 05B3  
                   l1724 059C                     l1716 0594                     l1708 058B  
                   l1398 06EE                     l1486 0622                     l1478 0602  
                   l1494 0636                     l1726 059D                     l1718 0595  
                   l1496 063B                     l1488 0628                     l1728 05A2  
                   l1498 0640                     l1690 0573                     l1692 0576  
                   l1694 057A                     l1696 057C                     l1688 056F  
                   l1698 057D                     STR_1 0543                     STR_2 055D  
                   STR_3 0563                     STR_4 0569                     STR_5 055F  
                   STR_6 0565                     STR_7 056B                     STR_8 055B  
                   STR_9 0561                     u1010 0717                     u1011 0716  
                   u1100 0636                     u1020 05E3                     u1101 0635  
                   u1021 05E2                     u1005 070B                     u1110 063B  
                   u1030 05EE                     u1111 063A                     u1031 05ED  
                   u1040 05FF                     u1041 05FE                     u1060 0611  
                   u1061 0610                     u1055 0603                     u1080 0622  
                   u1081 0621                     u1075 0612                     u1085 061E  
                   u1407 07AD                     u1095 062A                     u1417 0331  
                   u1427 037E                     u1377 0288                     u1387 02D5  
                   u1397 06CF                     i1l61 04CC                     i1l82 075D  
                   i1l67 0427                     i1l91 06C6                     i1l94 07C1  
                   i1l98 07A0                     _TMR0 0001                     _main 056F  
                   btemp 007E            ?_Manual_Limpa 0070                     start 0012  
          _LCD_String_xy 0645        ___bmul@multiplier 0072         __end_of_LCD_Char 02DA  
       __end_of_LCD_Init 06F5             ?i1_LCD_Clear 0070                    ?_main 0070  
        __end_of___awdiv 0645                    STR_10 0567                    STR_11 056D  
                  STR_12 0513                    STR_20 0506                    STR_13 054F  
                  STR_14 051F                    STR_15 054B                    STR_16 052B  
                  STR_17 0553                    STR_18 0537                    STR_19 0557  
                  _CMCON 009C          ___awdiv@divisor 002D                    _T2CON 0012  
                  i1l111 009F                    i1l120 0117                    i1l112 0065  
                  i1l105 0777                    i1l121 00C9                    i1l130 0141  
                  i1l114 007F                    i1l123 00E3                    i1l132 015B  
                  i1l116 0099                    i1l141 01E0                    i1l125 00FD  
                  i1l117 009E                    i1l134 0175                    i1l143 0202  
                  i1l129 018C                    i1l146 0224                    i1l139 01BE  
                  i1l266 078C          ___awdiv@counter 0031                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u70_25 039A                    u71_25 03AC  
                  u72_25 03BF                    _TRISA 0085                    _TRISB 0086  
                  u81_25 042C                    u73_25 03F7                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    u82_25 043F  
                  u74_25 040A                    u83_25 0451                    u84_25 0464  
                  u85_25 049C                    u69_25 0387                    u86_25 04AF  
                  u87_20 075D                    u95_20 077E                    u87_21 075C  
                  u95_21 077D                    u96_20 078B                    u96_21 078A  
                  u97_20 0792                    u97_21 0791          __end_of_teclado 0231  
                  pclath 000A                    status 0003           ??_Manual_Limpa 0078  
                  wtemp0 007E           ?_LCD_String_xy 002B          __initialization 0015  
           __end_of_main 05DC                   ??_main 0035        __end_of_LCD_Clear 07B2  
                 _ADCON0 001F                   _ADCON1 009F                   _CCPR1L 0015  
       ___awdiv@dividend 002F         LCD_String_xy@msg 002C         LCD_String_xy@pos 002B  
       LCD_String_xy@row 002D                   i1l1220 03CF                   i1l1300 0740  
                 i1l1230 03E7                   i1l1222 03D0                   i1l1302 0741  
                 i1l1240 041B                   i1l1232 03F4                   i1l1224 03D1  
                 i1l1216 0384                   i1l1304 074D                   i1l1242 041E  
                 i1l1234 0407                   i1l1226 03D4                   i1l1218 03CE  
                 i1l1306 0751                   i1l1236 0419                   i1l1228 03DC  
                 i1l1238 041A                   i1l1430 0792                   i1l1350 0782  
                 i1l1280 0476                   i1l1272 0429                   i1l1360 0689  
                 i1l1432 0797                   i1l1352 0784                   i1l1344 0779  
                 i1l1600 0101                   u120_20 00A9                   u112_20 0027  
                 u120_21 00A8                   u112_21 0026                   i1l1290 04AC  
                 i1l1282 0479                   i1l1274 0473                   i1l1370 069E  
                 i1l1362 068A                   i1l1354 0786                   i1l1346 077A  
                 i1l1442 076F                   i1l1434 075F                   i1l1610 0123  
                 i1l1530 0028                   i1l1292 04BE                   i1l1284 0481  
                 i1l1276 0474                   i1l1372 06A1                   i1l1364 068D  
                 i1l1380 06B2                   i1l1428 078D                   i1l1356 078B  
                 i1l1348 077E                   i1l1436 0760                   i1l1620 012B  
                 i1l1612 0124                   i1l1540 0036                   i1l1532 002A  
                 i1l1294 04BF                   i1l1286 048C                   i1l1278 0475  
                 i1l1374 06A8                   i1l1366 0694                   i1l1382 06C0  
                 i1l1438 076B                   i1l1614 0125                   i1l1606 011B  
                 i1l1550 0052                   i1l1542 0037                   i1l1534 002E  
                 i1l1526 0023                   i1l1296 04C0                   i1l1288 0499  
                 i1l1384 07B2                   i1l1376 06AB                   i1l1368 0697  
                 i1l1640 017B                   i1l1632 015F                   i1l1616 0126  
                 i1l1608 0121                   u121_20 00B3                   i1l1560 0083  
                 i1l1552 0056                   i1l1544 0038                   i1l1536 0033  
                 u113_20 002E                   i1l1528 0027                   u121_21 00B2  
                 u113_21 002D                   i1l1298 04C3                   i1l1386 07B8  
                 i1l1650 01A5                   i1l1642 017C                   i1l1626 0145  
                 i1l1618 0127                   i1l1570 00A9                   i1l1554 0069  
                 i1l1546 0039                   i1l1538 0035                   i1l1660 01C7  
                 i1l1652 01AF                   i1l1644 0190                   i1l1580 00AF  
                 i1l1572 00AB                   i1l1548 003D                   i1l1670 01E9  
                 i1l1662 01D1                   i1l1654 01B3                   i1l1646 0196  
                 i1l1638 0179                   i1l1582 00B3                   i1l1574 00AC  
                 i1l1680 020B                   i1l1672 01F3                   i1l1664 01D5  
                 i1l1648 01A0                   u130_20 0179                   u122_20 00CD  
                 i1l1576 00AD                   i1l1568 00A3                   u114_20 0033  
                 u130_21 0178                   u122_21 00CC                   u114_21 0032  
                 i1l1682 0215                   i1l1674 01F7                   i1l1658 01C2  
                 i1l1594 00E7                   i1l1578 00AE                   i1l1684 0219  
                 i1l1668 01E4                   i1l1588 00CD                   i1l1678 0206  
                 u131_20 0190                   u123_20 00E7                   u115_20 003D  
                 u131_21 018F                   u123_21 00E6                   u115_21 003C  
                 u132_20 0196                   u124_20 0101                   u116_20 0069  
                 u132_21 0195                   u124_21 0100                   u116_21 0068  
                 u133_20 01A0                   u125_20 011B                   u117_20 0083  
                 u133_21 019F                   u125_21 011A                   u117_21 0082  
                 u134_20 01C2                   u126_20 0121                   u118_20 009D  
                 u134_21 01C1                   u126_21 0120                   u118_21 009C  
                 u135_20 01E4                   u127_20 012B                   u119_20 00A3  
                 u135_21 01E3                   u127_21 012A                   u119_21 00A2  
                 u143_27 005E                   u136_20 0206                   u128_20 0145  
                 u136_21 0205                   u128_21 0144                   u144_27 0185  
                 u129_20 015F                   u129_21 015E                   u145_27 03D8  
                 u146_27 0422                   u147_27 07BC                   u148_27 047D  
                 u149_27 04C7            ?i1_LCD_String 0070                   ___bmul 0778  
                 ___wmul 06F5                ??___awdiv 0031          i1_LCD_String_xy 0688  
       ___awdiv@quotient 0033             __pdataCOMMON 007B                ??_teclado 0020  
                 saved_w 007E           ??i1_LCD_String 0073                ?_LCD_Char 0070  
__end_of__initialization 001F                ?_LCD_Init 0070          ??_LCD_String_xy 002D  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070             ??_LCD_String 002A  
          i1_LCD_Command 0428    __end_of_Multiplicador 0778     __end_of_Manual_Limpa 07A1  
           ??i1_LCD_Char 0070               __pbssBANK0 0037               ??_LCD_Char 0027  
             ??_LCD_Init 002A       __end_of_LCD_String 073F  __end_ofi1_LCD_String_xy 06C7  
             __pmaintext 056F                  ?___bmul 0070                  ?___wmul 0027  
             __pintentry 0004           ?i1_LCD_Command 0070                  _CCP1CON 0017  
     __end_ofi1_LCD_Char 0428       i1LCD_String_xy@msg 0075       i1LCD_String_xy@pos 0074  
     i1LCD_String_xy@row 0076               __stringtab 0500            LCD_String@msg 002A  
                ___awdiv 05DC     __end_ofi1_LCD_String 075E                  __ptext1 06F5  
                __ptext2 05DC                  __ptext3 0645                  __ptext4 071C  
                __ptext5 0231                  __ptext6 06C7                  __ptext7 07A1  
                __ptext8 02DA                  __ptext9 0023                  _teclado 0023  
                _uart_rd 007A                _LCD_Clear 07A1     end_of_initialization 001F  
         LCD_Command@cmd 0029         ?i1_LCD_String_xy 0074          ??i1_LCD_Command 0070  
              _PORTBbits 0006                _PORTDbits 0008               ?_LCD_Clear 0070  
           _Manual_Limpa 078D          i1LCD_String@msg 0073            ??_LCD_Command 0027  
         __end_of___bmul 078D           __end_of___wmul 071C            __pidataCOMMON 07C2  
    start_initialization 0015  i1LCD_String_xy@location 0077            i1LCD_Char@dat 0072  
  __end_of_LCD_String_xy 0688                 ??___bmul 0071                 ??___wmul 002B  
          ??i1_LCD_Clear 0073      __end_of_LCD_Command 0383              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020              ??_LCD_Clear 002A  
           i1_LCD_String 073F                 ?___awdiv 002D                __pstrings 0500  
               ?_teclado 0070      __end_ofi1_LCD_Clear 07C2    LCD_String_xy@location 002E  
               _LCD_Char 0231        interrupt_function 0004                 _LCD_Init 06C7  
         ___wmul@product 002B              _LCD_Command 02DA         i1LCD_Command@cmd 0072  
               _PWM_DUTY 0037              __stringbase 0505            _Multiplicador 075E  
      ___wmul@multiplier 0027    __end_ofi1_LCD_Command 04CD           ?_Multiplicador 0070  
     __end_of__stringtab 0506              i1_LCD_Clear 07B2                 __ptext10 075E  
               __ptext11 0778                 __ptext12 078D                 __ptext13 0688  
               __ptext14 073F                 __ptext15 0383                 __ptext16 07B2  
               __ptext17 0428                 _controle 007B       Multiplicador@valor 0073  
             _LCD_String 071C               _INTCONbits 000B               i1_LCD_Char 0383  
               intlevel1 0000                stringcode 0500          ??_Multiplicador 0073  
             _OPTION_REG 0081                 stringdir 0500                 stringtab 0500  
      ??i1_LCD_String_xy 0076               _PWM_MANUAL 0079  
